// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: graph_expression.proto

package ast

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GraphExpression struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Type:
	//
	//	*GraphExpression_GraphReference
	//	*GraphExpression_Expression
	//	*GraphExpression_ObjectNameOrBindingVariable
	//	*GraphExpression_CurrentGraph
	Type          isGraphExpression_Type `protobuf_oneof:"type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GraphExpression) Reset() {
	*x = GraphExpression{}
	mi := &file_graph_expression_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GraphExpression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphExpression) ProtoMessage() {}

func (x *GraphExpression) ProtoReflect() protoreflect.Message {
	mi := &file_graph_expression_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphExpression.ProtoReflect.Descriptor instead.
func (*GraphExpression) Descriptor() ([]byte, []int) {
	return file_graph_expression_proto_rawDescGZIP(), []int{0}
}

func (x *GraphExpression) GetType() isGraphExpression_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *GraphExpression) GetGraphReference() *GraphReference {
	if x != nil {
		if x, ok := x.Type.(*GraphExpression_GraphReference); ok {
			return x.GraphReference
		}
	}
	return nil
}

func (x *GraphExpression) GetExpression() *Todo {
	if x != nil {
		if x, ok := x.Type.(*GraphExpression_Expression); ok {
			return x.Expression
		}
	}
	return nil
}

func (x *GraphExpression) GetObjectNameOrBindingVariable() *Identifier {
	if x != nil {
		if x, ok := x.Type.(*GraphExpression_ObjectNameOrBindingVariable); ok {
			return x.ObjectNameOrBindingVariable
		}
	}
	return nil
}

func (x *GraphExpression) GetCurrentGraph() *CurrentGraph {
	if x != nil {
		if x, ok := x.Type.(*GraphExpression_CurrentGraph); ok {
			return x.CurrentGraph
		}
	}
	return nil
}

type isGraphExpression_Type interface {
	isGraphExpression_Type()
}

type GraphExpression_GraphReference struct {
	GraphReference *GraphReference `protobuf:"bytes,1,opt,name=graph_reference,json=graphReference,proto3,oneof"`
}

type GraphExpression_Expression struct {
	Expression *Todo `protobuf:"bytes,2,opt,name=expression,proto3,oneof"`
}

type GraphExpression_ObjectNameOrBindingVariable struct {
	ObjectNameOrBindingVariable *Identifier `protobuf:"bytes,3,opt,name=object_name_or_binding_variable,json=objectNameOrBindingVariable,proto3,oneof"`
}

type GraphExpression_CurrentGraph struct {
	CurrentGraph *CurrentGraph `protobuf:"bytes,4,opt,name=current_graph,json=currentGraph,proto3,oneof"`
}

func (*GraphExpression_GraphReference) isGraphExpression_Type() {}

func (*GraphExpression_Expression) isGraphExpression_Type() {}

func (*GraphExpression_ObjectNameOrBindingVariable) isGraphExpression_Type() {}

func (*GraphExpression_CurrentGraph) isGraphExpression_Type() {}

type CurrentGraph struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CurrentGraph) Reset() {
	*x = CurrentGraph{}
	mi := &file_graph_expression_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CurrentGraph) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentGraph) ProtoMessage() {}

func (x *CurrentGraph) ProtoReflect() protoreflect.Message {
	mi := &file_graph_expression_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentGraph.ProtoReflect.Descriptor instead.
func (*CurrentGraph) Descriptor() ([]byte, []int) {
	return file_graph_expression_proto_rawDescGZIP(), []int{1}
}

var File_graph_expression_proto protoreflect.FileDescriptor

var file_graph_expression_proto_rawDesc = string([]byte{
	0x0a, 0x16, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x73, 0x74, 0x1a, 0x15, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x74, 0x6f, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x99, 0x02, 0x0a, 0x0f, 0x47, 0x72, 0x61, 0x70, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x0f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x61, 0x73, 0x74, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x54,
	0x6f, 0x64, 0x6f, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x57, 0x0a, 0x1f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x5f, 0x6f, 0x72, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x73, 0x74,
	0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x48, 0x00, 0x52, 0x1b, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x4f, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x38, 0x0a, 0x0d, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x0e, 0x0a, 0x0c,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x42, 0x06, 0x5a, 0x04,
	0x2f, 0x61, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_graph_expression_proto_rawDescOnce sync.Once
	file_graph_expression_proto_rawDescData []byte
)

func file_graph_expression_proto_rawDescGZIP() []byte {
	file_graph_expression_proto_rawDescOnce.Do(func() {
		file_graph_expression_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_graph_expression_proto_rawDesc), len(file_graph_expression_proto_rawDesc)))
	})
	return file_graph_expression_proto_rawDescData
}

var file_graph_expression_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_graph_expression_proto_goTypes = []any{
	(*GraphExpression)(nil), // 0: ast.GraphExpression
	(*CurrentGraph)(nil),    // 1: ast.CurrentGraph
	(*GraphReference)(nil),  // 2: ast.GraphReference
	(*Todo)(nil),            // 3: ast.Todo
	(*Identifier)(nil),      // 4: ast.Identifier
}
var file_graph_expression_proto_depIdxs = []int32{
	2, // 0: ast.GraphExpression.graph_reference:type_name -> ast.GraphReference
	3, // 1: ast.GraphExpression.expression:type_name -> ast.Todo
	4, // 2: ast.GraphExpression.object_name_or_binding_variable:type_name -> ast.Identifier
	1, // 3: ast.GraphExpression.current_graph:type_name -> ast.CurrentGraph
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_graph_expression_proto_init() }
func file_graph_expression_proto_init() {
	if File_graph_expression_proto != nil {
		return
	}
	file_graph_reference_proto_init()
	file_todo_proto_init()
	file_literals_proto_init()
	file_graph_expression_proto_msgTypes[0].OneofWrappers = []any{
		(*GraphExpression_GraphReference)(nil),
		(*GraphExpression_Expression)(nil),
		(*GraphExpression_ObjectNameOrBindingVariable)(nil),
		(*GraphExpression_CurrentGraph)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_graph_expression_proto_rawDesc), len(file_graph_expression_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_graph_expression_proto_goTypes,
		DependencyIndexes: file_graph_expression_proto_depIdxs,
		MessageInfos:      file_graph_expression_proto_msgTypes,
	}.Build()
	File_graph_expression_proto = out.File
	file_graph_expression_proto_goTypes = nil
	file_graph_expression_proto_depIdxs = nil
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: graph_expression.proto
// Protobuf Java Version: 4.29.3

package ast;

public final class GraphExpressionOuterClass {
  private GraphExpressionOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      GraphExpressionOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface GraphExpressionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ast.GraphExpression)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.ast.GraphReference graph_reference = 1;</code>
     * @return Whether the graphReference field is set.
     */
    boolean hasGraphReference();
    /**
     * <code>.ast.GraphReference graph_reference = 1;</code>
     * @return The graphReference.
     */
    ast.GraphReferenceOuterClass.GraphReference getGraphReference();
    /**
     * <code>.ast.GraphReference graph_reference = 1;</code>
     */
    ast.GraphReferenceOuterClass.GraphReferenceOrBuilder getGraphReferenceOrBuilder();

    /**
     * <code>.ast.Todo expression = 2;</code>
     * @return Whether the expression field is set.
     */
    boolean hasExpression();
    /**
     * <code>.ast.Todo expression = 2;</code>
     * @return The expression.
     */
    ast.TodoOuterClass.Todo getExpression();
    /**
     * <code>.ast.Todo expression = 2;</code>
     */
    ast.TodoOuterClass.TodoOrBuilder getExpressionOrBuilder();

    /**
     * <code>.ast.Identifier object_name_or_binding_variable = 3;</code>
     * @return Whether the objectNameOrBindingVariable field is set.
     */
    boolean hasObjectNameOrBindingVariable();
    /**
     * <code>.ast.Identifier object_name_or_binding_variable = 3;</code>
     * @return The objectNameOrBindingVariable.
     */
    ast.Literals.Identifier getObjectNameOrBindingVariable();
    /**
     * <code>.ast.Identifier object_name_or_binding_variable = 3;</code>
     */
    ast.Literals.IdentifierOrBuilder getObjectNameOrBindingVariableOrBuilder();

    /**
     * <code>.ast.CurrentGraph current_graph = 4;</code>
     * @return Whether the currentGraph field is set.
     */
    boolean hasCurrentGraph();
    /**
     * <code>.ast.CurrentGraph current_graph = 4;</code>
     * @return The currentGraph.
     */
    ast.GraphExpressionOuterClass.CurrentGraph getCurrentGraph();
    /**
     * <code>.ast.CurrentGraph current_graph = 4;</code>
     */
    ast.GraphExpressionOuterClass.CurrentGraphOrBuilder getCurrentGraphOrBuilder();

    ast.GraphExpressionOuterClass.GraphExpression.TypeCase getTypeCase();
  }
  /**
   * Protobuf type {@code ast.GraphExpression}
   */
  public static final class GraphExpression extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ast.GraphExpression)
      GraphExpressionOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        GraphExpression.class.getName());
    }
    // Use GraphExpression.newBuilder() to construct.
    private GraphExpression(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private GraphExpression() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ast.GraphExpressionOuterClass.internal_static_ast_GraphExpression_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ast.GraphExpressionOuterClass.internal_static_ast_GraphExpression_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ast.GraphExpressionOuterClass.GraphExpression.class, ast.GraphExpressionOuterClass.GraphExpression.Builder.class);
    }

    private int typeCase_ = 0;
    @SuppressWarnings("serial")
    private java.lang.Object type_;
    public enum TypeCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      GRAPH_REFERENCE(1),
      EXPRESSION(2),
      OBJECT_NAME_OR_BINDING_VARIABLE(3),
      CURRENT_GRAPH(4),
      TYPE_NOT_SET(0);
      private final int value;
      private TypeCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static TypeCase forNumber(int value) {
        switch (value) {
          case 1: return GRAPH_REFERENCE;
          case 2: return EXPRESSION;
          case 3: return OBJECT_NAME_OR_BINDING_VARIABLE;
          case 4: return CURRENT_GRAPH;
          case 0: return TYPE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public TypeCase
    getTypeCase() {
      return TypeCase.forNumber(
          typeCase_);
    }

    public static final int GRAPH_REFERENCE_FIELD_NUMBER = 1;
    /**
     * <code>.ast.GraphReference graph_reference = 1;</code>
     * @return Whether the graphReference field is set.
     */
    @java.lang.Override
    public boolean hasGraphReference() {
      return typeCase_ == 1;
    }
    /**
     * <code>.ast.GraphReference graph_reference = 1;</code>
     * @return The graphReference.
     */
    @java.lang.Override
    public ast.GraphReferenceOuterClass.GraphReference getGraphReference() {
      if (typeCase_ == 1) {
         return (ast.GraphReferenceOuterClass.GraphReference) type_;
      }
      return ast.GraphReferenceOuterClass.GraphReference.getDefaultInstance();
    }
    /**
     * <code>.ast.GraphReference graph_reference = 1;</code>
     */
    @java.lang.Override
    public ast.GraphReferenceOuterClass.GraphReferenceOrBuilder getGraphReferenceOrBuilder() {
      if (typeCase_ == 1) {
         return (ast.GraphReferenceOuterClass.GraphReference) type_;
      }
      return ast.GraphReferenceOuterClass.GraphReference.getDefaultInstance();
    }

    public static final int EXPRESSION_FIELD_NUMBER = 2;
    /**
     * <code>.ast.Todo expression = 2;</code>
     * @return Whether the expression field is set.
     */
    @java.lang.Override
    public boolean hasExpression() {
      return typeCase_ == 2;
    }
    /**
     * <code>.ast.Todo expression = 2;</code>
     * @return The expression.
     */
    @java.lang.Override
    public ast.TodoOuterClass.Todo getExpression() {
      if (typeCase_ == 2) {
         return (ast.TodoOuterClass.Todo) type_;
      }
      return ast.TodoOuterClass.Todo.getDefaultInstance();
    }
    /**
     * <code>.ast.Todo expression = 2;</code>
     */
    @java.lang.Override
    public ast.TodoOuterClass.TodoOrBuilder getExpressionOrBuilder() {
      if (typeCase_ == 2) {
         return (ast.TodoOuterClass.Todo) type_;
      }
      return ast.TodoOuterClass.Todo.getDefaultInstance();
    }

    public static final int OBJECT_NAME_OR_BINDING_VARIABLE_FIELD_NUMBER = 3;
    /**
     * <code>.ast.Identifier object_name_or_binding_variable = 3;</code>
     * @return Whether the objectNameOrBindingVariable field is set.
     */
    @java.lang.Override
    public boolean hasObjectNameOrBindingVariable() {
      return typeCase_ == 3;
    }
    /**
     * <code>.ast.Identifier object_name_or_binding_variable = 3;</code>
     * @return The objectNameOrBindingVariable.
     */
    @java.lang.Override
    public ast.Literals.Identifier getObjectNameOrBindingVariable() {
      if (typeCase_ == 3) {
         return (ast.Literals.Identifier) type_;
      }
      return ast.Literals.Identifier.getDefaultInstance();
    }
    /**
     * <code>.ast.Identifier object_name_or_binding_variable = 3;</code>
     */
    @java.lang.Override
    public ast.Literals.IdentifierOrBuilder getObjectNameOrBindingVariableOrBuilder() {
      if (typeCase_ == 3) {
         return (ast.Literals.Identifier) type_;
      }
      return ast.Literals.Identifier.getDefaultInstance();
    }

    public static final int CURRENT_GRAPH_FIELD_NUMBER = 4;
    /**
     * <code>.ast.CurrentGraph current_graph = 4;</code>
     * @return Whether the currentGraph field is set.
     */
    @java.lang.Override
    public boolean hasCurrentGraph() {
      return typeCase_ == 4;
    }
    /**
     * <code>.ast.CurrentGraph current_graph = 4;</code>
     * @return The currentGraph.
     */
    @java.lang.Override
    public ast.GraphExpressionOuterClass.CurrentGraph getCurrentGraph() {
      if (typeCase_ == 4) {
         return (ast.GraphExpressionOuterClass.CurrentGraph) type_;
      }
      return ast.GraphExpressionOuterClass.CurrentGraph.getDefaultInstance();
    }
    /**
     * <code>.ast.CurrentGraph current_graph = 4;</code>
     */
    @java.lang.Override
    public ast.GraphExpressionOuterClass.CurrentGraphOrBuilder getCurrentGraphOrBuilder() {
      if (typeCase_ == 4) {
         return (ast.GraphExpressionOuterClass.CurrentGraph) type_;
      }
      return ast.GraphExpressionOuterClass.CurrentGraph.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (typeCase_ == 1) {
        output.writeMessage(1, (ast.GraphReferenceOuterClass.GraphReference) type_);
      }
      if (typeCase_ == 2) {
        output.writeMessage(2, (ast.TodoOuterClass.Todo) type_);
      }
      if (typeCase_ == 3) {
        output.writeMessage(3, (ast.Literals.Identifier) type_);
      }
      if (typeCase_ == 4) {
        output.writeMessage(4, (ast.GraphExpressionOuterClass.CurrentGraph) type_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (typeCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (ast.GraphReferenceOuterClass.GraphReference) type_);
      }
      if (typeCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (ast.TodoOuterClass.Todo) type_);
      }
      if (typeCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (ast.Literals.Identifier) type_);
      }
      if (typeCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (ast.GraphExpressionOuterClass.CurrentGraph) type_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ast.GraphExpressionOuterClass.GraphExpression)) {
        return super.equals(obj);
      }
      ast.GraphExpressionOuterClass.GraphExpression other = (ast.GraphExpressionOuterClass.GraphExpression) obj;

      if (!getTypeCase().equals(other.getTypeCase())) return false;
      switch (typeCase_) {
        case 1:
          if (!getGraphReference()
              .equals(other.getGraphReference())) return false;
          break;
        case 2:
          if (!getExpression()
              .equals(other.getExpression())) return false;
          break;
        case 3:
          if (!getObjectNameOrBindingVariable()
              .equals(other.getObjectNameOrBindingVariable())) return false;
          break;
        case 4:
          if (!getCurrentGraph()
              .equals(other.getCurrentGraph())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (typeCase_) {
        case 1:
          hash = (37 * hash) + GRAPH_REFERENCE_FIELD_NUMBER;
          hash = (53 * hash) + getGraphReference().hashCode();
          break;
        case 2:
          hash = (37 * hash) + EXPRESSION_FIELD_NUMBER;
          hash = (53 * hash) + getExpression().hashCode();
          break;
        case 3:
          hash = (37 * hash) + OBJECT_NAME_OR_BINDING_VARIABLE_FIELD_NUMBER;
          hash = (53 * hash) + getObjectNameOrBindingVariable().hashCode();
          break;
        case 4:
          hash = (37 * hash) + CURRENT_GRAPH_FIELD_NUMBER;
          hash = (53 * hash) + getCurrentGraph().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ast.GraphExpressionOuterClass.GraphExpression parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ast.GraphExpressionOuterClass.GraphExpression parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ast.GraphExpressionOuterClass.GraphExpression parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ast.GraphExpressionOuterClass.GraphExpression parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ast.GraphExpressionOuterClass.GraphExpression parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ast.GraphExpressionOuterClass.GraphExpression parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ast.GraphExpressionOuterClass.GraphExpression parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ast.GraphExpressionOuterClass.GraphExpression parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static ast.GraphExpressionOuterClass.GraphExpression parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static ast.GraphExpressionOuterClass.GraphExpression parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ast.GraphExpressionOuterClass.GraphExpression parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ast.GraphExpressionOuterClass.GraphExpression parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ast.GraphExpressionOuterClass.GraphExpression prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ast.GraphExpression}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ast.GraphExpression)
        ast.GraphExpressionOuterClass.GraphExpressionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ast.GraphExpressionOuterClass.internal_static_ast_GraphExpression_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ast.GraphExpressionOuterClass.internal_static_ast_GraphExpression_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ast.GraphExpressionOuterClass.GraphExpression.class, ast.GraphExpressionOuterClass.GraphExpression.Builder.class);
      }

      // Construct using ast.GraphExpressionOuterClass.GraphExpression.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (graphReferenceBuilder_ != null) {
          graphReferenceBuilder_.clear();
        }
        if (expressionBuilder_ != null) {
          expressionBuilder_.clear();
        }
        if (objectNameOrBindingVariableBuilder_ != null) {
          objectNameOrBindingVariableBuilder_.clear();
        }
        if (currentGraphBuilder_ != null) {
          currentGraphBuilder_.clear();
        }
        typeCase_ = 0;
        type_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ast.GraphExpressionOuterClass.internal_static_ast_GraphExpression_descriptor;
      }

      @java.lang.Override
      public ast.GraphExpressionOuterClass.GraphExpression getDefaultInstanceForType() {
        return ast.GraphExpressionOuterClass.GraphExpression.getDefaultInstance();
      }

      @java.lang.Override
      public ast.GraphExpressionOuterClass.GraphExpression build() {
        ast.GraphExpressionOuterClass.GraphExpression result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public ast.GraphExpressionOuterClass.GraphExpression buildPartial() {
        ast.GraphExpressionOuterClass.GraphExpression result = new ast.GraphExpressionOuterClass.GraphExpression(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(ast.GraphExpressionOuterClass.GraphExpression result) {
        int from_bitField0_ = bitField0_;
      }

      private void buildPartialOneofs(ast.GraphExpressionOuterClass.GraphExpression result) {
        result.typeCase_ = typeCase_;
        result.type_ = this.type_;
        if (typeCase_ == 1 &&
            graphReferenceBuilder_ != null) {
          result.type_ = graphReferenceBuilder_.build();
        }
        if (typeCase_ == 2 &&
            expressionBuilder_ != null) {
          result.type_ = expressionBuilder_.build();
        }
        if (typeCase_ == 3 &&
            objectNameOrBindingVariableBuilder_ != null) {
          result.type_ = objectNameOrBindingVariableBuilder_.build();
        }
        if (typeCase_ == 4 &&
            currentGraphBuilder_ != null) {
          result.type_ = currentGraphBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ast.GraphExpressionOuterClass.GraphExpression) {
          return mergeFrom((ast.GraphExpressionOuterClass.GraphExpression)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ast.GraphExpressionOuterClass.GraphExpression other) {
        if (other == ast.GraphExpressionOuterClass.GraphExpression.getDefaultInstance()) return this;
        switch (other.getTypeCase()) {
          case GRAPH_REFERENCE: {
            mergeGraphReference(other.getGraphReference());
            break;
          }
          case EXPRESSION: {
            mergeExpression(other.getExpression());
            break;
          }
          case OBJECT_NAME_OR_BINDING_VARIABLE: {
            mergeObjectNameOrBindingVariable(other.getObjectNameOrBindingVariable());
            break;
          }
          case CURRENT_GRAPH: {
            mergeCurrentGraph(other.getCurrentGraph());
            break;
          }
          case TYPE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getGraphReferenceFieldBuilder().getBuilder(),
                    extensionRegistry);
                typeCase_ = 1;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getExpressionFieldBuilder().getBuilder(),
                    extensionRegistry);
                typeCase_ = 2;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getObjectNameOrBindingVariableFieldBuilder().getBuilder(),
                    extensionRegistry);
                typeCase_ = 3;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getCurrentGraphFieldBuilder().getBuilder(),
                    extensionRegistry);
                typeCase_ = 4;
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int typeCase_ = 0;
      private java.lang.Object type_;
      public TypeCase
          getTypeCase() {
        return TypeCase.forNumber(
            typeCase_);
      }

      public Builder clearType() {
        typeCase_ = 0;
        type_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.SingleFieldBuilder<
          ast.GraphReferenceOuterClass.GraphReference, ast.GraphReferenceOuterClass.GraphReference.Builder, ast.GraphReferenceOuterClass.GraphReferenceOrBuilder> graphReferenceBuilder_;
      /**
       * <code>.ast.GraphReference graph_reference = 1;</code>
       * @return Whether the graphReference field is set.
       */
      @java.lang.Override
      public boolean hasGraphReference() {
        return typeCase_ == 1;
      }
      /**
       * <code>.ast.GraphReference graph_reference = 1;</code>
       * @return The graphReference.
       */
      @java.lang.Override
      public ast.GraphReferenceOuterClass.GraphReference getGraphReference() {
        if (graphReferenceBuilder_ == null) {
          if (typeCase_ == 1) {
            return (ast.GraphReferenceOuterClass.GraphReference) type_;
          }
          return ast.GraphReferenceOuterClass.GraphReference.getDefaultInstance();
        } else {
          if (typeCase_ == 1) {
            return graphReferenceBuilder_.getMessage();
          }
          return ast.GraphReferenceOuterClass.GraphReference.getDefaultInstance();
        }
      }
      /**
       * <code>.ast.GraphReference graph_reference = 1;</code>
       */
      public Builder setGraphReference(ast.GraphReferenceOuterClass.GraphReference value) {
        if (graphReferenceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          graphReferenceBuilder_.setMessage(value);
        }
        typeCase_ = 1;
        return this;
      }
      /**
       * <code>.ast.GraphReference graph_reference = 1;</code>
       */
      public Builder setGraphReference(
          ast.GraphReferenceOuterClass.GraphReference.Builder builderForValue) {
        if (graphReferenceBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          graphReferenceBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 1;
        return this;
      }
      /**
       * <code>.ast.GraphReference graph_reference = 1;</code>
       */
      public Builder mergeGraphReference(ast.GraphReferenceOuterClass.GraphReference value) {
        if (graphReferenceBuilder_ == null) {
          if (typeCase_ == 1 &&
              type_ != ast.GraphReferenceOuterClass.GraphReference.getDefaultInstance()) {
            type_ = ast.GraphReferenceOuterClass.GraphReference.newBuilder((ast.GraphReferenceOuterClass.GraphReference) type_)
                .mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 1) {
            graphReferenceBuilder_.mergeFrom(value);
          } else {
            graphReferenceBuilder_.setMessage(value);
          }
        }
        typeCase_ = 1;
        return this;
      }
      /**
       * <code>.ast.GraphReference graph_reference = 1;</code>
       */
      public Builder clearGraphReference() {
        if (graphReferenceBuilder_ == null) {
          if (typeCase_ == 1) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 1) {
            typeCase_ = 0;
            type_ = null;
          }
          graphReferenceBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.ast.GraphReference graph_reference = 1;</code>
       */
      public ast.GraphReferenceOuterClass.GraphReference.Builder getGraphReferenceBuilder() {
        return getGraphReferenceFieldBuilder().getBuilder();
      }
      /**
       * <code>.ast.GraphReference graph_reference = 1;</code>
       */
      @java.lang.Override
      public ast.GraphReferenceOuterClass.GraphReferenceOrBuilder getGraphReferenceOrBuilder() {
        if ((typeCase_ == 1) && (graphReferenceBuilder_ != null)) {
          return graphReferenceBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 1) {
            return (ast.GraphReferenceOuterClass.GraphReference) type_;
          }
          return ast.GraphReferenceOuterClass.GraphReference.getDefaultInstance();
        }
      }
      /**
       * <code>.ast.GraphReference graph_reference = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ast.GraphReferenceOuterClass.GraphReference, ast.GraphReferenceOuterClass.GraphReference.Builder, ast.GraphReferenceOuterClass.GraphReferenceOrBuilder> 
          getGraphReferenceFieldBuilder() {
        if (graphReferenceBuilder_ == null) {
          if (!(typeCase_ == 1)) {
            type_ = ast.GraphReferenceOuterClass.GraphReference.getDefaultInstance();
          }
          graphReferenceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ast.GraphReferenceOuterClass.GraphReference, ast.GraphReferenceOuterClass.GraphReference.Builder, ast.GraphReferenceOuterClass.GraphReferenceOrBuilder>(
                  (ast.GraphReferenceOuterClass.GraphReference) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 1;
        onChanged();
        return graphReferenceBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          ast.TodoOuterClass.Todo, ast.TodoOuterClass.Todo.Builder, ast.TodoOuterClass.TodoOrBuilder> expressionBuilder_;
      /**
       * <code>.ast.Todo expression = 2;</code>
       * @return Whether the expression field is set.
       */
      @java.lang.Override
      public boolean hasExpression() {
        return typeCase_ == 2;
      }
      /**
       * <code>.ast.Todo expression = 2;</code>
       * @return The expression.
       */
      @java.lang.Override
      public ast.TodoOuterClass.Todo getExpression() {
        if (expressionBuilder_ == null) {
          if (typeCase_ == 2) {
            return (ast.TodoOuterClass.Todo) type_;
          }
          return ast.TodoOuterClass.Todo.getDefaultInstance();
        } else {
          if (typeCase_ == 2) {
            return expressionBuilder_.getMessage();
          }
          return ast.TodoOuterClass.Todo.getDefaultInstance();
        }
      }
      /**
       * <code>.ast.Todo expression = 2;</code>
       */
      public Builder setExpression(ast.TodoOuterClass.Todo value) {
        if (expressionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          expressionBuilder_.setMessage(value);
        }
        typeCase_ = 2;
        return this;
      }
      /**
       * <code>.ast.Todo expression = 2;</code>
       */
      public Builder setExpression(
          ast.TodoOuterClass.Todo.Builder builderForValue) {
        if (expressionBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          expressionBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 2;
        return this;
      }
      /**
       * <code>.ast.Todo expression = 2;</code>
       */
      public Builder mergeExpression(ast.TodoOuterClass.Todo value) {
        if (expressionBuilder_ == null) {
          if (typeCase_ == 2 &&
              type_ != ast.TodoOuterClass.Todo.getDefaultInstance()) {
            type_ = ast.TodoOuterClass.Todo.newBuilder((ast.TodoOuterClass.Todo) type_)
                .mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 2) {
            expressionBuilder_.mergeFrom(value);
          } else {
            expressionBuilder_.setMessage(value);
          }
        }
        typeCase_ = 2;
        return this;
      }
      /**
       * <code>.ast.Todo expression = 2;</code>
       */
      public Builder clearExpression() {
        if (expressionBuilder_ == null) {
          if (typeCase_ == 2) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 2) {
            typeCase_ = 0;
            type_ = null;
          }
          expressionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.ast.Todo expression = 2;</code>
       */
      public ast.TodoOuterClass.Todo.Builder getExpressionBuilder() {
        return getExpressionFieldBuilder().getBuilder();
      }
      /**
       * <code>.ast.Todo expression = 2;</code>
       */
      @java.lang.Override
      public ast.TodoOuterClass.TodoOrBuilder getExpressionOrBuilder() {
        if ((typeCase_ == 2) && (expressionBuilder_ != null)) {
          return expressionBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 2) {
            return (ast.TodoOuterClass.Todo) type_;
          }
          return ast.TodoOuterClass.Todo.getDefaultInstance();
        }
      }
      /**
       * <code>.ast.Todo expression = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ast.TodoOuterClass.Todo, ast.TodoOuterClass.Todo.Builder, ast.TodoOuterClass.TodoOrBuilder> 
          getExpressionFieldBuilder() {
        if (expressionBuilder_ == null) {
          if (!(typeCase_ == 2)) {
            type_ = ast.TodoOuterClass.Todo.getDefaultInstance();
          }
          expressionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ast.TodoOuterClass.Todo, ast.TodoOuterClass.Todo.Builder, ast.TodoOuterClass.TodoOrBuilder>(
                  (ast.TodoOuterClass.Todo) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 2;
        onChanged();
        return expressionBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          ast.Literals.Identifier, ast.Literals.Identifier.Builder, ast.Literals.IdentifierOrBuilder> objectNameOrBindingVariableBuilder_;
      /**
       * <code>.ast.Identifier object_name_or_binding_variable = 3;</code>
       * @return Whether the objectNameOrBindingVariable field is set.
       */
      @java.lang.Override
      public boolean hasObjectNameOrBindingVariable() {
        return typeCase_ == 3;
      }
      /**
       * <code>.ast.Identifier object_name_or_binding_variable = 3;</code>
       * @return The objectNameOrBindingVariable.
       */
      @java.lang.Override
      public ast.Literals.Identifier getObjectNameOrBindingVariable() {
        if (objectNameOrBindingVariableBuilder_ == null) {
          if (typeCase_ == 3) {
            return (ast.Literals.Identifier) type_;
          }
          return ast.Literals.Identifier.getDefaultInstance();
        } else {
          if (typeCase_ == 3) {
            return objectNameOrBindingVariableBuilder_.getMessage();
          }
          return ast.Literals.Identifier.getDefaultInstance();
        }
      }
      /**
       * <code>.ast.Identifier object_name_or_binding_variable = 3;</code>
       */
      public Builder setObjectNameOrBindingVariable(ast.Literals.Identifier value) {
        if (objectNameOrBindingVariableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          objectNameOrBindingVariableBuilder_.setMessage(value);
        }
        typeCase_ = 3;
        return this;
      }
      /**
       * <code>.ast.Identifier object_name_or_binding_variable = 3;</code>
       */
      public Builder setObjectNameOrBindingVariable(
          ast.Literals.Identifier.Builder builderForValue) {
        if (objectNameOrBindingVariableBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          objectNameOrBindingVariableBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 3;
        return this;
      }
      /**
       * <code>.ast.Identifier object_name_or_binding_variable = 3;</code>
       */
      public Builder mergeObjectNameOrBindingVariable(ast.Literals.Identifier value) {
        if (objectNameOrBindingVariableBuilder_ == null) {
          if (typeCase_ == 3 &&
              type_ != ast.Literals.Identifier.getDefaultInstance()) {
            type_ = ast.Literals.Identifier.newBuilder((ast.Literals.Identifier) type_)
                .mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 3) {
            objectNameOrBindingVariableBuilder_.mergeFrom(value);
          } else {
            objectNameOrBindingVariableBuilder_.setMessage(value);
          }
        }
        typeCase_ = 3;
        return this;
      }
      /**
       * <code>.ast.Identifier object_name_or_binding_variable = 3;</code>
       */
      public Builder clearObjectNameOrBindingVariable() {
        if (objectNameOrBindingVariableBuilder_ == null) {
          if (typeCase_ == 3) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 3) {
            typeCase_ = 0;
            type_ = null;
          }
          objectNameOrBindingVariableBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.ast.Identifier object_name_or_binding_variable = 3;</code>
       */
      public ast.Literals.Identifier.Builder getObjectNameOrBindingVariableBuilder() {
        return getObjectNameOrBindingVariableFieldBuilder().getBuilder();
      }
      /**
       * <code>.ast.Identifier object_name_or_binding_variable = 3;</code>
       */
      @java.lang.Override
      public ast.Literals.IdentifierOrBuilder getObjectNameOrBindingVariableOrBuilder() {
        if ((typeCase_ == 3) && (objectNameOrBindingVariableBuilder_ != null)) {
          return objectNameOrBindingVariableBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 3) {
            return (ast.Literals.Identifier) type_;
          }
          return ast.Literals.Identifier.getDefaultInstance();
        }
      }
      /**
       * <code>.ast.Identifier object_name_or_binding_variable = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ast.Literals.Identifier, ast.Literals.Identifier.Builder, ast.Literals.IdentifierOrBuilder> 
          getObjectNameOrBindingVariableFieldBuilder() {
        if (objectNameOrBindingVariableBuilder_ == null) {
          if (!(typeCase_ == 3)) {
            type_ = ast.Literals.Identifier.getDefaultInstance();
          }
          objectNameOrBindingVariableBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ast.Literals.Identifier, ast.Literals.Identifier.Builder, ast.Literals.IdentifierOrBuilder>(
                  (ast.Literals.Identifier) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 3;
        onChanged();
        return objectNameOrBindingVariableBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          ast.GraphExpressionOuterClass.CurrentGraph, ast.GraphExpressionOuterClass.CurrentGraph.Builder, ast.GraphExpressionOuterClass.CurrentGraphOrBuilder> currentGraphBuilder_;
      /**
       * <code>.ast.CurrentGraph current_graph = 4;</code>
       * @return Whether the currentGraph field is set.
       */
      @java.lang.Override
      public boolean hasCurrentGraph() {
        return typeCase_ == 4;
      }
      /**
       * <code>.ast.CurrentGraph current_graph = 4;</code>
       * @return The currentGraph.
       */
      @java.lang.Override
      public ast.GraphExpressionOuterClass.CurrentGraph getCurrentGraph() {
        if (currentGraphBuilder_ == null) {
          if (typeCase_ == 4) {
            return (ast.GraphExpressionOuterClass.CurrentGraph) type_;
          }
          return ast.GraphExpressionOuterClass.CurrentGraph.getDefaultInstance();
        } else {
          if (typeCase_ == 4) {
            return currentGraphBuilder_.getMessage();
          }
          return ast.GraphExpressionOuterClass.CurrentGraph.getDefaultInstance();
        }
      }
      /**
       * <code>.ast.CurrentGraph current_graph = 4;</code>
       */
      public Builder setCurrentGraph(ast.GraphExpressionOuterClass.CurrentGraph value) {
        if (currentGraphBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          currentGraphBuilder_.setMessage(value);
        }
        typeCase_ = 4;
        return this;
      }
      /**
       * <code>.ast.CurrentGraph current_graph = 4;</code>
       */
      public Builder setCurrentGraph(
          ast.GraphExpressionOuterClass.CurrentGraph.Builder builderForValue) {
        if (currentGraphBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          currentGraphBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 4;
        return this;
      }
      /**
       * <code>.ast.CurrentGraph current_graph = 4;</code>
       */
      public Builder mergeCurrentGraph(ast.GraphExpressionOuterClass.CurrentGraph value) {
        if (currentGraphBuilder_ == null) {
          if (typeCase_ == 4 &&
              type_ != ast.GraphExpressionOuterClass.CurrentGraph.getDefaultInstance()) {
            type_ = ast.GraphExpressionOuterClass.CurrentGraph.newBuilder((ast.GraphExpressionOuterClass.CurrentGraph) type_)
                .mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 4) {
            currentGraphBuilder_.mergeFrom(value);
          } else {
            currentGraphBuilder_.setMessage(value);
          }
        }
        typeCase_ = 4;
        return this;
      }
      /**
       * <code>.ast.CurrentGraph current_graph = 4;</code>
       */
      public Builder clearCurrentGraph() {
        if (currentGraphBuilder_ == null) {
          if (typeCase_ == 4) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 4) {
            typeCase_ = 0;
            type_ = null;
          }
          currentGraphBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.ast.CurrentGraph current_graph = 4;</code>
       */
      public ast.GraphExpressionOuterClass.CurrentGraph.Builder getCurrentGraphBuilder() {
        return getCurrentGraphFieldBuilder().getBuilder();
      }
      /**
       * <code>.ast.CurrentGraph current_graph = 4;</code>
       */
      @java.lang.Override
      public ast.GraphExpressionOuterClass.CurrentGraphOrBuilder getCurrentGraphOrBuilder() {
        if ((typeCase_ == 4) && (currentGraphBuilder_ != null)) {
          return currentGraphBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 4) {
            return (ast.GraphExpressionOuterClass.CurrentGraph) type_;
          }
          return ast.GraphExpressionOuterClass.CurrentGraph.getDefaultInstance();
        }
      }
      /**
       * <code>.ast.CurrentGraph current_graph = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ast.GraphExpressionOuterClass.CurrentGraph, ast.GraphExpressionOuterClass.CurrentGraph.Builder, ast.GraphExpressionOuterClass.CurrentGraphOrBuilder> 
          getCurrentGraphFieldBuilder() {
        if (currentGraphBuilder_ == null) {
          if (!(typeCase_ == 4)) {
            type_ = ast.GraphExpressionOuterClass.CurrentGraph.getDefaultInstance();
          }
          currentGraphBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ast.GraphExpressionOuterClass.CurrentGraph, ast.GraphExpressionOuterClass.CurrentGraph.Builder, ast.GraphExpressionOuterClass.CurrentGraphOrBuilder>(
                  (ast.GraphExpressionOuterClass.CurrentGraph) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 4;
        onChanged();
        return currentGraphBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ast.GraphExpression)
    }

    // @@protoc_insertion_point(class_scope:ast.GraphExpression)
    private static final ast.GraphExpressionOuterClass.GraphExpression DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ast.GraphExpressionOuterClass.GraphExpression();
    }

    public static ast.GraphExpressionOuterClass.GraphExpression getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GraphExpression>
        PARSER = new com.google.protobuf.AbstractParser<GraphExpression>() {
      @java.lang.Override
      public GraphExpression parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<GraphExpression> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GraphExpression> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public ast.GraphExpressionOuterClass.GraphExpression getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CurrentGraphOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ast.CurrentGraph)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code ast.CurrentGraph}
   */
  public static final class CurrentGraph extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ast.CurrentGraph)
      CurrentGraphOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        CurrentGraph.class.getName());
    }
    // Use CurrentGraph.newBuilder() to construct.
    private CurrentGraph(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CurrentGraph() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ast.GraphExpressionOuterClass.internal_static_ast_CurrentGraph_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ast.GraphExpressionOuterClass.internal_static_ast_CurrentGraph_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ast.GraphExpressionOuterClass.CurrentGraph.class, ast.GraphExpressionOuterClass.CurrentGraph.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ast.GraphExpressionOuterClass.CurrentGraph)) {
        return super.equals(obj);
      }
      ast.GraphExpressionOuterClass.CurrentGraph other = (ast.GraphExpressionOuterClass.CurrentGraph) obj;

      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ast.GraphExpressionOuterClass.CurrentGraph parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ast.GraphExpressionOuterClass.CurrentGraph parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ast.GraphExpressionOuterClass.CurrentGraph parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ast.GraphExpressionOuterClass.CurrentGraph parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ast.GraphExpressionOuterClass.CurrentGraph parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ast.GraphExpressionOuterClass.CurrentGraph parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ast.GraphExpressionOuterClass.CurrentGraph parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ast.GraphExpressionOuterClass.CurrentGraph parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static ast.GraphExpressionOuterClass.CurrentGraph parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static ast.GraphExpressionOuterClass.CurrentGraph parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ast.GraphExpressionOuterClass.CurrentGraph parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ast.GraphExpressionOuterClass.CurrentGraph parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ast.GraphExpressionOuterClass.CurrentGraph prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ast.CurrentGraph}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ast.CurrentGraph)
        ast.GraphExpressionOuterClass.CurrentGraphOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ast.GraphExpressionOuterClass.internal_static_ast_CurrentGraph_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ast.GraphExpressionOuterClass.internal_static_ast_CurrentGraph_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ast.GraphExpressionOuterClass.CurrentGraph.class, ast.GraphExpressionOuterClass.CurrentGraph.Builder.class);
      }

      // Construct using ast.GraphExpressionOuterClass.CurrentGraph.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ast.GraphExpressionOuterClass.internal_static_ast_CurrentGraph_descriptor;
      }

      @java.lang.Override
      public ast.GraphExpressionOuterClass.CurrentGraph getDefaultInstanceForType() {
        return ast.GraphExpressionOuterClass.CurrentGraph.getDefaultInstance();
      }

      @java.lang.Override
      public ast.GraphExpressionOuterClass.CurrentGraph build() {
        ast.GraphExpressionOuterClass.CurrentGraph result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public ast.GraphExpressionOuterClass.CurrentGraph buildPartial() {
        ast.GraphExpressionOuterClass.CurrentGraph result = new ast.GraphExpressionOuterClass.CurrentGraph(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ast.GraphExpressionOuterClass.CurrentGraph) {
          return mergeFrom((ast.GraphExpressionOuterClass.CurrentGraph)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ast.GraphExpressionOuterClass.CurrentGraph other) {
        if (other == ast.GraphExpressionOuterClass.CurrentGraph.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ast.CurrentGraph)
    }

    // @@protoc_insertion_point(class_scope:ast.CurrentGraph)
    private static final ast.GraphExpressionOuterClass.CurrentGraph DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ast.GraphExpressionOuterClass.CurrentGraph();
    }

    public static ast.GraphExpressionOuterClass.CurrentGraph getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CurrentGraph>
        PARSER = new com.google.protobuf.AbstractParser<CurrentGraph>() {
      @java.lang.Override
      public CurrentGraph parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CurrentGraph> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CurrentGraph> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public ast.GraphExpressionOuterClass.CurrentGraph getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ast_GraphExpression_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ast_GraphExpression_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ast_CurrentGraph_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ast_CurrentGraph_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026graph_expression.proto\022\003ast\032\025graph_ref" +
      "erence.proto\032\ntodo.proto\032\016literals.proto" +
      "\"\322\001\n\017GraphExpression\022.\n\017graph_reference\030" +
      "\001 \001(\0132\023.ast.GraphReferenceH\000\022\037\n\nexpressi" +
      "on\030\002 \001(\0132\t.ast.TodoH\000\022:\n\037object_name_or_" +
      "binding_variable\030\003 \001(\0132\017.ast.IdentifierH" +
      "\000\022*\n\rcurrent_graph\030\004 \001(\0132\021.ast.CurrentGr" +
      "aphH\000B\006\n\004type\"\016\n\014CurrentGraphB\006Z\004/astb\006p" +
      "roto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          ast.GraphReferenceOuterClass.getDescriptor(),
          ast.TodoOuterClass.getDescriptor(),
          ast.Literals.getDescriptor(),
        });
    internal_static_ast_GraphExpression_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ast_GraphExpression_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ast_GraphExpression_descriptor,
        new java.lang.String[] { "GraphReference", "Expression", "ObjectNameOrBindingVariable", "CurrentGraph", "Type", });
    internal_static_ast_CurrentGraph_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_ast_CurrentGraph_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ast_CurrentGraph_descriptor,
        new java.lang.String[] { });
    descriptor.resolveAllFeaturesImmutable();
    ast.GraphReferenceOuterClass.getDescriptor();
    ast.TodoOuterClass.getDescriptor();
    ast.Literals.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

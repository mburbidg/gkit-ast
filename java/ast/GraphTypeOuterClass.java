// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: graph_type.proto
// Protobuf Java Version: 4.29.3

package ast;

public final class GraphTypeOuterClass {
  private GraphTypeOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      GraphTypeOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface GraphTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ast.GraphType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.ast.GraphTypeLikeGraph graph_type_like_graph = 1;</code>
     * @return Whether the graphTypeLikeGraph field is set.
     */
    boolean hasGraphTypeLikeGraph();
    /**
     * <code>.ast.GraphTypeLikeGraph graph_type_like_graph = 1;</code>
     * @return The graphTypeLikeGraph.
     */
    ast.GraphTypeOuterClass.GraphTypeLikeGraph getGraphTypeLikeGraph();
    /**
     * <code>.ast.GraphTypeLikeGraph graph_type_like_graph = 1;</code>
     */
    ast.GraphTypeOuterClass.GraphTypeLikeGraphOrBuilder getGraphTypeLikeGraphOrBuilder();

    /**
     * <code>.ast.GraphTypeReference graph_type_reference = 2;</code>
     * @return Whether the graphTypeReference field is set.
     */
    boolean hasGraphTypeReference();
    /**
     * <code>.ast.GraphTypeReference graph_type_reference = 2;</code>
     * @return The graphTypeReference.
     */
    ast.GraphTypeOuterClass.GraphTypeReference getGraphTypeReference();
    /**
     * <code>.ast.GraphTypeReference graph_type_reference = 2;</code>
     */
    ast.GraphTypeOuterClass.GraphTypeReferenceOrBuilder getGraphTypeReferenceOrBuilder();

    /**
     * <code>.ast.NestedGraphTypeSpecification nested_graph_type_specification = 3;</code>
     * @return Whether the nestedGraphTypeSpecification field is set.
     */
    boolean hasNestedGraphTypeSpecification();
    /**
     * <code>.ast.NestedGraphTypeSpecification nested_graph_type_specification = 3;</code>
     * @return The nestedGraphTypeSpecification.
     */
    ast.GraphTypeOuterClass.NestedGraphTypeSpecification getNestedGraphTypeSpecification();
    /**
     * <code>.ast.NestedGraphTypeSpecification nested_graph_type_specification = 3;</code>
     */
    ast.GraphTypeOuterClass.NestedGraphTypeSpecificationOrBuilder getNestedGraphTypeSpecificationOrBuilder();

    ast.GraphTypeOuterClass.GraphType.TypeCase getTypeCase();
  }
  /**
   * Protobuf type {@code ast.GraphType}
   */
  public static final class GraphType extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ast.GraphType)
      GraphTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        GraphType.class.getName());
    }
    // Use GraphType.newBuilder() to construct.
    private GraphType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private GraphType() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ast.GraphTypeOuterClass.internal_static_ast_GraphType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ast.GraphTypeOuterClass.internal_static_ast_GraphType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ast.GraphTypeOuterClass.GraphType.class, ast.GraphTypeOuterClass.GraphType.Builder.class);
    }

    private int typeCase_ = 0;
    @SuppressWarnings("serial")
    private java.lang.Object type_;
    public enum TypeCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      GRAPH_TYPE_LIKE_GRAPH(1),
      GRAPH_TYPE_REFERENCE(2),
      NESTED_GRAPH_TYPE_SPECIFICATION(3),
      TYPE_NOT_SET(0);
      private final int value;
      private TypeCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static TypeCase forNumber(int value) {
        switch (value) {
          case 1: return GRAPH_TYPE_LIKE_GRAPH;
          case 2: return GRAPH_TYPE_REFERENCE;
          case 3: return NESTED_GRAPH_TYPE_SPECIFICATION;
          case 0: return TYPE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public TypeCase
    getTypeCase() {
      return TypeCase.forNumber(
          typeCase_);
    }

    public static final int GRAPH_TYPE_LIKE_GRAPH_FIELD_NUMBER = 1;
    /**
     * <code>.ast.GraphTypeLikeGraph graph_type_like_graph = 1;</code>
     * @return Whether the graphTypeLikeGraph field is set.
     */
    @java.lang.Override
    public boolean hasGraphTypeLikeGraph() {
      return typeCase_ == 1;
    }
    /**
     * <code>.ast.GraphTypeLikeGraph graph_type_like_graph = 1;</code>
     * @return The graphTypeLikeGraph.
     */
    @java.lang.Override
    public ast.GraphTypeOuterClass.GraphTypeLikeGraph getGraphTypeLikeGraph() {
      if (typeCase_ == 1) {
         return (ast.GraphTypeOuterClass.GraphTypeLikeGraph) type_;
      }
      return ast.GraphTypeOuterClass.GraphTypeLikeGraph.getDefaultInstance();
    }
    /**
     * <code>.ast.GraphTypeLikeGraph graph_type_like_graph = 1;</code>
     */
    @java.lang.Override
    public ast.GraphTypeOuterClass.GraphTypeLikeGraphOrBuilder getGraphTypeLikeGraphOrBuilder() {
      if (typeCase_ == 1) {
         return (ast.GraphTypeOuterClass.GraphTypeLikeGraph) type_;
      }
      return ast.GraphTypeOuterClass.GraphTypeLikeGraph.getDefaultInstance();
    }

    public static final int GRAPH_TYPE_REFERENCE_FIELD_NUMBER = 2;
    /**
     * <code>.ast.GraphTypeReference graph_type_reference = 2;</code>
     * @return Whether the graphTypeReference field is set.
     */
    @java.lang.Override
    public boolean hasGraphTypeReference() {
      return typeCase_ == 2;
    }
    /**
     * <code>.ast.GraphTypeReference graph_type_reference = 2;</code>
     * @return The graphTypeReference.
     */
    @java.lang.Override
    public ast.GraphTypeOuterClass.GraphTypeReference getGraphTypeReference() {
      if (typeCase_ == 2) {
         return (ast.GraphTypeOuterClass.GraphTypeReference) type_;
      }
      return ast.GraphTypeOuterClass.GraphTypeReference.getDefaultInstance();
    }
    /**
     * <code>.ast.GraphTypeReference graph_type_reference = 2;</code>
     */
    @java.lang.Override
    public ast.GraphTypeOuterClass.GraphTypeReferenceOrBuilder getGraphTypeReferenceOrBuilder() {
      if (typeCase_ == 2) {
         return (ast.GraphTypeOuterClass.GraphTypeReference) type_;
      }
      return ast.GraphTypeOuterClass.GraphTypeReference.getDefaultInstance();
    }

    public static final int NESTED_GRAPH_TYPE_SPECIFICATION_FIELD_NUMBER = 3;
    /**
     * <code>.ast.NestedGraphTypeSpecification nested_graph_type_specification = 3;</code>
     * @return Whether the nestedGraphTypeSpecification field is set.
     */
    @java.lang.Override
    public boolean hasNestedGraphTypeSpecification() {
      return typeCase_ == 3;
    }
    /**
     * <code>.ast.NestedGraphTypeSpecification nested_graph_type_specification = 3;</code>
     * @return The nestedGraphTypeSpecification.
     */
    @java.lang.Override
    public ast.GraphTypeOuterClass.NestedGraphTypeSpecification getNestedGraphTypeSpecification() {
      if (typeCase_ == 3) {
         return (ast.GraphTypeOuterClass.NestedGraphTypeSpecification) type_;
      }
      return ast.GraphTypeOuterClass.NestedGraphTypeSpecification.getDefaultInstance();
    }
    /**
     * <code>.ast.NestedGraphTypeSpecification nested_graph_type_specification = 3;</code>
     */
    @java.lang.Override
    public ast.GraphTypeOuterClass.NestedGraphTypeSpecificationOrBuilder getNestedGraphTypeSpecificationOrBuilder() {
      if (typeCase_ == 3) {
         return (ast.GraphTypeOuterClass.NestedGraphTypeSpecification) type_;
      }
      return ast.GraphTypeOuterClass.NestedGraphTypeSpecification.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (typeCase_ == 1) {
        output.writeMessage(1, (ast.GraphTypeOuterClass.GraphTypeLikeGraph) type_);
      }
      if (typeCase_ == 2) {
        output.writeMessage(2, (ast.GraphTypeOuterClass.GraphTypeReference) type_);
      }
      if (typeCase_ == 3) {
        output.writeMessage(3, (ast.GraphTypeOuterClass.NestedGraphTypeSpecification) type_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (typeCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (ast.GraphTypeOuterClass.GraphTypeLikeGraph) type_);
      }
      if (typeCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (ast.GraphTypeOuterClass.GraphTypeReference) type_);
      }
      if (typeCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (ast.GraphTypeOuterClass.NestedGraphTypeSpecification) type_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ast.GraphTypeOuterClass.GraphType)) {
        return super.equals(obj);
      }
      ast.GraphTypeOuterClass.GraphType other = (ast.GraphTypeOuterClass.GraphType) obj;

      if (!getTypeCase().equals(other.getTypeCase())) return false;
      switch (typeCase_) {
        case 1:
          if (!getGraphTypeLikeGraph()
              .equals(other.getGraphTypeLikeGraph())) return false;
          break;
        case 2:
          if (!getGraphTypeReference()
              .equals(other.getGraphTypeReference())) return false;
          break;
        case 3:
          if (!getNestedGraphTypeSpecification()
              .equals(other.getNestedGraphTypeSpecification())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (typeCase_) {
        case 1:
          hash = (37 * hash) + GRAPH_TYPE_LIKE_GRAPH_FIELD_NUMBER;
          hash = (53 * hash) + getGraphTypeLikeGraph().hashCode();
          break;
        case 2:
          hash = (37 * hash) + GRAPH_TYPE_REFERENCE_FIELD_NUMBER;
          hash = (53 * hash) + getGraphTypeReference().hashCode();
          break;
        case 3:
          hash = (37 * hash) + NESTED_GRAPH_TYPE_SPECIFICATION_FIELD_NUMBER;
          hash = (53 * hash) + getNestedGraphTypeSpecification().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ast.GraphTypeOuterClass.GraphType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ast.GraphTypeOuterClass.GraphType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ast.GraphTypeOuterClass.GraphType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ast.GraphTypeOuterClass.GraphType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ast.GraphTypeOuterClass.GraphType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ast.GraphTypeOuterClass.GraphType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ast.GraphTypeOuterClass.GraphType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ast.GraphTypeOuterClass.GraphType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static ast.GraphTypeOuterClass.GraphType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static ast.GraphTypeOuterClass.GraphType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ast.GraphTypeOuterClass.GraphType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ast.GraphTypeOuterClass.GraphType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ast.GraphTypeOuterClass.GraphType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ast.GraphType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ast.GraphType)
        ast.GraphTypeOuterClass.GraphTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ast.GraphTypeOuterClass.internal_static_ast_GraphType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ast.GraphTypeOuterClass.internal_static_ast_GraphType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ast.GraphTypeOuterClass.GraphType.class, ast.GraphTypeOuterClass.GraphType.Builder.class);
      }

      // Construct using ast.GraphTypeOuterClass.GraphType.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (graphTypeLikeGraphBuilder_ != null) {
          graphTypeLikeGraphBuilder_.clear();
        }
        if (graphTypeReferenceBuilder_ != null) {
          graphTypeReferenceBuilder_.clear();
        }
        if (nestedGraphTypeSpecificationBuilder_ != null) {
          nestedGraphTypeSpecificationBuilder_.clear();
        }
        typeCase_ = 0;
        type_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ast.GraphTypeOuterClass.internal_static_ast_GraphType_descriptor;
      }

      @java.lang.Override
      public ast.GraphTypeOuterClass.GraphType getDefaultInstanceForType() {
        return ast.GraphTypeOuterClass.GraphType.getDefaultInstance();
      }

      @java.lang.Override
      public ast.GraphTypeOuterClass.GraphType build() {
        ast.GraphTypeOuterClass.GraphType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public ast.GraphTypeOuterClass.GraphType buildPartial() {
        ast.GraphTypeOuterClass.GraphType result = new ast.GraphTypeOuterClass.GraphType(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(ast.GraphTypeOuterClass.GraphType result) {
        int from_bitField0_ = bitField0_;
      }

      private void buildPartialOneofs(ast.GraphTypeOuterClass.GraphType result) {
        result.typeCase_ = typeCase_;
        result.type_ = this.type_;
        if (typeCase_ == 1 &&
            graphTypeLikeGraphBuilder_ != null) {
          result.type_ = graphTypeLikeGraphBuilder_.build();
        }
        if (typeCase_ == 2 &&
            graphTypeReferenceBuilder_ != null) {
          result.type_ = graphTypeReferenceBuilder_.build();
        }
        if (typeCase_ == 3 &&
            nestedGraphTypeSpecificationBuilder_ != null) {
          result.type_ = nestedGraphTypeSpecificationBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ast.GraphTypeOuterClass.GraphType) {
          return mergeFrom((ast.GraphTypeOuterClass.GraphType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ast.GraphTypeOuterClass.GraphType other) {
        if (other == ast.GraphTypeOuterClass.GraphType.getDefaultInstance()) return this;
        switch (other.getTypeCase()) {
          case GRAPH_TYPE_LIKE_GRAPH: {
            mergeGraphTypeLikeGraph(other.getGraphTypeLikeGraph());
            break;
          }
          case GRAPH_TYPE_REFERENCE: {
            mergeGraphTypeReference(other.getGraphTypeReference());
            break;
          }
          case NESTED_GRAPH_TYPE_SPECIFICATION: {
            mergeNestedGraphTypeSpecification(other.getNestedGraphTypeSpecification());
            break;
          }
          case TYPE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getGraphTypeLikeGraphFieldBuilder().getBuilder(),
                    extensionRegistry);
                typeCase_ = 1;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getGraphTypeReferenceFieldBuilder().getBuilder(),
                    extensionRegistry);
                typeCase_ = 2;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getNestedGraphTypeSpecificationFieldBuilder().getBuilder(),
                    extensionRegistry);
                typeCase_ = 3;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int typeCase_ = 0;
      private java.lang.Object type_;
      public TypeCase
          getTypeCase() {
        return TypeCase.forNumber(
            typeCase_);
      }

      public Builder clearType() {
        typeCase_ = 0;
        type_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.SingleFieldBuilder<
          ast.GraphTypeOuterClass.GraphTypeLikeGraph, ast.GraphTypeOuterClass.GraphTypeLikeGraph.Builder, ast.GraphTypeOuterClass.GraphTypeLikeGraphOrBuilder> graphTypeLikeGraphBuilder_;
      /**
       * <code>.ast.GraphTypeLikeGraph graph_type_like_graph = 1;</code>
       * @return Whether the graphTypeLikeGraph field is set.
       */
      @java.lang.Override
      public boolean hasGraphTypeLikeGraph() {
        return typeCase_ == 1;
      }
      /**
       * <code>.ast.GraphTypeLikeGraph graph_type_like_graph = 1;</code>
       * @return The graphTypeLikeGraph.
       */
      @java.lang.Override
      public ast.GraphTypeOuterClass.GraphTypeLikeGraph getGraphTypeLikeGraph() {
        if (graphTypeLikeGraphBuilder_ == null) {
          if (typeCase_ == 1) {
            return (ast.GraphTypeOuterClass.GraphTypeLikeGraph) type_;
          }
          return ast.GraphTypeOuterClass.GraphTypeLikeGraph.getDefaultInstance();
        } else {
          if (typeCase_ == 1) {
            return graphTypeLikeGraphBuilder_.getMessage();
          }
          return ast.GraphTypeOuterClass.GraphTypeLikeGraph.getDefaultInstance();
        }
      }
      /**
       * <code>.ast.GraphTypeLikeGraph graph_type_like_graph = 1;</code>
       */
      public Builder setGraphTypeLikeGraph(ast.GraphTypeOuterClass.GraphTypeLikeGraph value) {
        if (graphTypeLikeGraphBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          graphTypeLikeGraphBuilder_.setMessage(value);
        }
        typeCase_ = 1;
        return this;
      }
      /**
       * <code>.ast.GraphTypeLikeGraph graph_type_like_graph = 1;</code>
       */
      public Builder setGraphTypeLikeGraph(
          ast.GraphTypeOuterClass.GraphTypeLikeGraph.Builder builderForValue) {
        if (graphTypeLikeGraphBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          graphTypeLikeGraphBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 1;
        return this;
      }
      /**
       * <code>.ast.GraphTypeLikeGraph graph_type_like_graph = 1;</code>
       */
      public Builder mergeGraphTypeLikeGraph(ast.GraphTypeOuterClass.GraphTypeLikeGraph value) {
        if (graphTypeLikeGraphBuilder_ == null) {
          if (typeCase_ == 1 &&
              type_ != ast.GraphTypeOuterClass.GraphTypeLikeGraph.getDefaultInstance()) {
            type_ = ast.GraphTypeOuterClass.GraphTypeLikeGraph.newBuilder((ast.GraphTypeOuterClass.GraphTypeLikeGraph) type_)
                .mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 1) {
            graphTypeLikeGraphBuilder_.mergeFrom(value);
          } else {
            graphTypeLikeGraphBuilder_.setMessage(value);
          }
        }
        typeCase_ = 1;
        return this;
      }
      /**
       * <code>.ast.GraphTypeLikeGraph graph_type_like_graph = 1;</code>
       */
      public Builder clearGraphTypeLikeGraph() {
        if (graphTypeLikeGraphBuilder_ == null) {
          if (typeCase_ == 1) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 1) {
            typeCase_ = 0;
            type_ = null;
          }
          graphTypeLikeGraphBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.ast.GraphTypeLikeGraph graph_type_like_graph = 1;</code>
       */
      public ast.GraphTypeOuterClass.GraphTypeLikeGraph.Builder getGraphTypeLikeGraphBuilder() {
        return getGraphTypeLikeGraphFieldBuilder().getBuilder();
      }
      /**
       * <code>.ast.GraphTypeLikeGraph graph_type_like_graph = 1;</code>
       */
      @java.lang.Override
      public ast.GraphTypeOuterClass.GraphTypeLikeGraphOrBuilder getGraphTypeLikeGraphOrBuilder() {
        if ((typeCase_ == 1) && (graphTypeLikeGraphBuilder_ != null)) {
          return graphTypeLikeGraphBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 1) {
            return (ast.GraphTypeOuterClass.GraphTypeLikeGraph) type_;
          }
          return ast.GraphTypeOuterClass.GraphTypeLikeGraph.getDefaultInstance();
        }
      }
      /**
       * <code>.ast.GraphTypeLikeGraph graph_type_like_graph = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ast.GraphTypeOuterClass.GraphTypeLikeGraph, ast.GraphTypeOuterClass.GraphTypeLikeGraph.Builder, ast.GraphTypeOuterClass.GraphTypeLikeGraphOrBuilder> 
          getGraphTypeLikeGraphFieldBuilder() {
        if (graphTypeLikeGraphBuilder_ == null) {
          if (!(typeCase_ == 1)) {
            type_ = ast.GraphTypeOuterClass.GraphTypeLikeGraph.getDefaultInstance();
          }
          graphTypeLikeGraphBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ast.GraphTypeOuterClass.GraphTypeLikeGraph, ast.GraphTypeOuterClass.GraphTypeLikeGraph.Builder, ast.GraphTypeOuterClass.GraphTypeLikeGraphOrBuilder>(
                  (ast.GraphTypeOuterClass.GraphTypeLikeGraph) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 1;
        onChanged();
        return graphTypeLikeGraphBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          ast.GraphTypeOuterClass.GraphTypeReference, ast.GraphTypeOuterClass.GraphTypeReference.Builder, ast.GraphTypeOuterClass.GraphTypeReferenceOrBuilder> graphTypeReferenceBuilder_;
      /**
       * <code>.ast.GraphTypeReference graph_type_reference = 2;</code>
       * @return Whether the graphTypeReference field is set.
       */
      @java.lang.Override
      public boolean hasGraphTypeReference() {
        return typeCase_ == 2;
      }
      /**
       * <code>.ast.GraphTypeReference graph_type_reference = 2;</code>
       * @return The graphTypeReference.
       */
      @java.lang.Override
      public ast.GraphTypeOuterClass.GraphTypeReference getGraphTypeReference() {
        if (graphTypeReferenceBuilder_ == null) {
          if (typeCase_ == 2) {
            return (ast.GraphTypeOuterClass.GraphTypeReference) type_;
          }
          return ast.GraphTypeOuterClass.GraphTypeReference.getDefaultInstance();
        } else {
          if (typeCase_ == 2) {
            return graphTypeReferenceBuilder_.getMessage();
          }
          return ast.GraphTypeOuterClass.GraphTypeReference.getDefaultInstance();
        }
      }
      /**
       * <code>.ast.GraphTypeReference graph_type_reference = 2;</code>
       */
      public Builder setGraphTypeReference(ast.GraphTypeOuterClass.GraphTypeReference value) {
        if (graphTypeReferenceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          graphTypeReferenceBuilder_.setMessage(value);
        }
        typeCase_ = 2;
        return this;
      }
      /**
       * <code>.ast.GraphTypeReference graph_type_reference = 2;</code>
       */
      public Builder setGraphTypeReference(
          ast.GraphTypeOuterClass.GraphTypeReference.Builder builderForValue) {
        if (graphTypeReferenceBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          graphTypeReferenceBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 2;
        return this;
      }
      /**
       * <code>.ast.GraphTypeReference graph_type_reference = 2;</code>
       */
      public Builder mergeGraphTypeReference(ast.GraphTypeOuterClass.GraphTypeReference value) {
        if (graphTypeReferenceBuilder_ == null) {
          if (typeCase_ == 2 &&
              type_ != ast.GraphTypeOuterClass.GraphTypeReference.getDefaultInstance()) {
            type_ = ast.GraphTypeOuterClass.GraphTypeReference.newBuilder((ast.GraphTypeOuterClass.GraphTypeReference) type_)
                .mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 2) {
            graphTypeReferenceBuilder_.mergeFrom(value);
          } else {
            graphTypeReferenceBuilder_.setMessage(value);
          }
        }
        typeCase_ = 2;
        return this;
      }
      /**
       * <code>.ast.GraphTypeReference graph_type_reference = 2;</code>
       */
      public Builder clearGraphTypeReference() {
        if (graphTypeReferenceBuilder_ == null) {
          if (typeCase_ == 2) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 2) {
            typeCase_ = 0;
            type_ = null;
          }
          graphTypeReferenceBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.ast.GraphTypeReference graph_type_reference = 2;</code>
       */
      public ast.GraphTypeOuterClass.GraphTypeReference.Builder getGraphTypeReferenceBuilder() {
        return getGraphTypeReferenceFieldBuilder().getBuilder();
      }
      /**
       * <code>.ast.GraphTypeReference graph_type_reference = 2;</code>
       */
      @java.lang.Override
      public ast.GraphTypeOuterClass.GraphTypeReferenceOrBuilder getGraphTypeReferenceOrBuilder() {
        if ((typeCase_ == 2) && (graphTypeReferenceBuilder_ != null)) {
          return graphTypeReferenceBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 2) {
            return (ast.GraphTypeOuterClass.GraphTypeReference) type_;
          }
          return ast.GraphTypeOuterClass.GraphTypeReference.getDefaultInstance();
        }
      }
      /**
       * <code>.ast.GraphTypeReference graph_type_reference = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ast.GraphTypeOuterClass.GraphTypeReference, ast.GraphTypeOuterClass.GraphTypeReference.Builder, ast.GraphTypeOuterClass.GraphTypeReferenceOrBuilder> 
          getGraphTypeReferenceFieldBuilder() {
        if (graphTypeReferenceBuilder_ == null) {
          if (!(typeCase_ == 2)) {
            type_ = ast.GraphTypeOuterClass.GraphTypeReference.getDefaultInstance();
          }
          graphTypeReferenceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ast.GraphTypeOuterClass.GraphTypeReference, ast.GraphTypeOuterClass.GraphTypeReference.Builder, ast.GraphTypeOuterClass.GraphTypeReferenceOrBuilder>(
                  (ast.GraphTypeOuterClass.GraphTypeReference) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 2;
        onChanged();
        return graphTypeReferenceBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          ast.GraphTypeOuterClass.NestedGraphTypeSpecification, ast.GraphTypeOuterClass.NestedGraphTypeSpecification.Builder, ast.GraphTypeOuterClass.NestedGraphTypeSpecificationOrBuilder> nestedGraphTypeSpecificationBuilder_;
      /**
       * <code>.ast.NestedGraphTypeSpecification nested_graph_type_specification = 3;</code>
       * @return Whether the nestedGraphTypeSpecification field is set.
       */
      @java.lang.Override
      public boolean hasNestedGraphTypeSpecification() {
        return typeCase_ == 3;
      }
      /**
       * <code>.ast.NestedGraphTypeSpecification nested_graph_type_specification = 3;</code>
       * @return The nestedGraphTypeSpecification.
       */
      @java.lang.Override
      public ast.GraphTypeOuterClass.NestedGraphTypeSpecification getNestedGraphTypeSpecification() {
        if (nestedGraphTypeSpecificationBuilder_ == null) {
          if (typeCase_ == 3) {
            return (ast.GraphTypeOuterClass.NestedGraphTypeSpecification) type_;
          }
          return ast.GraphTypeOuterClass.NestedGraphTypeSpecification.getDefaultInstance();
        } else {
          if (typeCase_ == 3) {
            return nestedGraphTypeSpecificationBuilder_.getMessage();
          }
          return ast.GraphTypeOuterClass.NestedGraphTypeSpecification.getDefaultInstance();
        }
      }
      /**
       * <code>.ast.NestedGraphTypeSpecification nested_graph_type_specification = 3;</code>
       */
      public Builder setNestedGraphTypeSpecification(ast.GraphTypeOuterClass.NestedGraphTypeSpecification value) {
        if (nestedGraphTypeSpecificationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          nestedGraphTypeSpecificationBuilder_.setMessage(value);
        }
        typeCase_ = 3;
        return this;
      }
      /**
       * <code>.ast.NestedGraphTypeSpecification nested_graph_type_specification = 3;</code>
       */
      public Builder setNestedGraphTypeSpecification(
          ast.GraphTypeOuterClass.NestedGraphTypeSpecification.Builder builderForValue) {
        if (nestedGraphTypeSpecificationBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          nestedGraphTypeSpecificationBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 3;
        return this;
      }
      /**
       * <code>.ast.NestedGraphTypeSpecification nested_graph_type_specification = 3;</code>
       */
      public Builder mergeNestedGraphTypeSpecification(ast.GraphTypeOuterClass.NestedGraphTypeSpecification value) {
        if (nestedGraphTypeSpecificationBuilder_ == null) {
          if (typeCase_ == 3 &&
              type_ != ast.GraphTypeOuterClass.NestedGraphTypeSpecification.getDefaultInstance()) {
            type_ = ast.GraphTypeOuterClass.NestedGraphTypeSpecification.newBuilder((ast.GraphTypeOuterClass.NestedGraphTypeSpecification) type_)
                .mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 3) {
            nestedGraphTypeSpecificationBuilder_.mergeFrom(value);
          } else {
            nestedGraphTypeSpecificationBuilder_.setMessage(value);
          }
        }
        typeCase_ = 3;
        return this;
      }
      /**
       * <code>.ast.NestedGraphTypeSpecification nested_graph_type_specification = 3;</code>
       */
      public Builder clearNestedGraphTypeSpecification() {
        if (nestedGraphTypeSpecificationBuilder_ == null) {
          if (typeCase_ == 3) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 3) {
            typeCase_ = 0;
            type_ = null;
          }
          nestedGraphTypeSpecificationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.ast.NestedGraphTypeSpecification nested_graph_type_specification = 3;</code>
       */
      public ast.GraphTypeOuterClass.NestedGraphTypeSpecification.Builder getNestedGraphTypeSpecificationBuilder() {
        return getNestedGraphTypeSpecificationFieldBuilder().getBuilder();
      }
      /**
       * <code>.ast.NestedGraphTypeSpecification nested_graph_type_specification = 3;</code>
       */
      @java.lang.Override
      public ast.GraphTypeOuterClass.NestedGraphTypeSpecificationOrBuilder getNestedGraphTypeSpecificationOrBuilder() {
        if ((typeCase_ == 3) && (nestedGraphTypeSpecificationBuilder_ != null)) {
          return nestedGraphTypeSpecificationBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 3) {
            return (ast.GraphTypeOuterClass.NestedGraphTypeSpecification) type_;
          }
          return ast.GraphTypeOuterClass.NestedGraphTypeSpecification.getDefaultInstance();
        }
      }
      /**
       * <code>.ast.NestedGraphTypeSpecification nested_graph_type_specification = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ast.GraphTypeOuterClass.NestedGraphTypeSpecification, ast.GraphTypeOuterClass.NestedGraphTypeSpecification.Builder, ast.GraphTypeOuterClass.NestedGraphTypeSpecificationOrBuilder> 
          getNestedGraphTypeSpecificationFieldBuilder() {
        if (nestedGraphTypeSpecificationBuilder_ == null) {
          if (!(typeCase_ == 3)) {
            type_ = ast.GraphTypeOuterClass.NestedGraphTypeSpecification.getDefaultInstance();
          }
          nestedGraphTypeSpecificationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ast.GraphTypeOuterClass.NestedGraphTypeSpecification, ast.GraphTypeOuterClass.NestedGraphTypeSpecification.Builder, ast.GraphTypeOuterClass.NestedGraphTypeSpecificationOrBuilder>(
                  (ast.GraphTypeOuterClass.NestedGraphTypeSpecification) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 3;
        onChanged();
        return nestedGraphTypeSpecificationBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ast.GraphType)
    }

    // @@protoc_insertion_point(class_scope:ast.GraphType)
    private static final ast.GraphTypeOuterClass.GraphType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ast.GraphTypeOuterClass.GraphType();
    }

    public static ast.GraphTypeOuterClass.GraphType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GraphType>
        PARSER = new com.google.protobuf.AbstractParser<GraphType>() {
      @java.lang.Override
      public GraphType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<GraphType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GraphType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public ast.GraphTypeOuterClass.GraphType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GraphTypeLikeGraphOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ast.GraphTypeLikeGraph)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.ast.GraphExpression graph_expression = 1;</code>
     * @return Whether the graphExpression field is set.
     */
    boolean hasGraphExpression();
    /**
     * <code>.ast.GraphExpression graph_expression = 1;</code>
     * @return The graphExpression.
     */
    ast.GraphExpressionOuterClass.GraphExpression getGraphExpression();
    /**
     * <code>.ast.GraphExpression graph_expression = 1;</code>
     */
    ast.GraphExpressionOuterClass.GraphExpressionOrBuilder getGraphExpressionOrBuilder();
  }
  /**
   * Protobuf type {@code ast.GraphTypeLikeGraph}
   */
  public static final class GraphTypeLikeGraph extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ast.GraphTypeLikeGraph)
      GraphTypeLikeGraphOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        GraphTypeLikeGraph.class.getName());
    }
    // Use GraphTypeLikeGraph.newBuilder() to construct.
    private GraphTypeLikeGraph(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private GraphTypeLikeGraph() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ast.GraphTypeOuterClass.internal_static_ast_GraphTypeLikeGraph_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ast.GraphTypeOuterClass.internal_static_ast_GraphTypeLikeGraph_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ast.GraphTypeOuterClass.GraphTypeLikeGraph.class, ast.GraphTypeOuterClass.GraphTypeLikeGraph.Builder.class);
    }

    private int bitField0_;
    public static final int GRAPH_EXPRESSION_FIELD_NUMBER = 1;
    private ast.GraphExpressionOuterClass.GraphExpression graphExpression_;
    /**
     * <code>.ast.GraphExpression graph_expression = 1;</code>
     * @return Whether the graphExpression field is set.
     */
    @java.lang.Override
    public boolean hasGraphExpression() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.ast.GraphExpression graph_expression = 1;</code>
     * @return The graphExpression.
     */
    @java.lang.Override
    public ast.GraphExpressionOuterClass.GraphExpression getGraphExpression() {
      return graphExpression_ == null ? ast.GraphExpressionOuterClass.GraphExpression.getDefaultInstance() : graphExpression_;
    }
    /**
     * <code>.ast.GraphExpression graph_expression = 1;</code>
     */
    @java.lang.Override
    public ast.GraphExpressionOuterClass.GraphExpressionOrBuilder getGraphExpressionOrBuilder() {
      return graphExpression_ == null ? ast.GraphExpressionOuterClass.GraphExpression.getDefaultInstance() : graphExpression_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getGraphExpression());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getGraphExpression());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ast.GraphTypeOuterClass.GraphTypeLikeGraph)) {
        return super.equals(obj);
      }
      ast.GraphTypeOuterClass.GraphTypeLikeGraph other = (ast.GraphTypeOuterClass.GraphTypeLikeGraph) obj;

      if (hasGraphExpression() != other.hasGraphExpression()) return false;
      if (hasGraphExpression()) {
        if (!getGraphExpression()
            .equals(other.getGraphExpression())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasGraphExpression()) {
        hash = (37 * hash) + GRAPH_EXPRESSION_FIELD_NUMBER;
        hash = (53 * hash) + getGraphExpression().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ast.GraphTypeOuterClass.GraphTypeLikeGraph parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ast.GraphTypeOuterClass.GraphTypeLikeGraph parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ast.GraphTypeOuterClass.GraphTypeLikeGraph parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ast.GraphTypeOuterClass.GraphTypeLikeGraph parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ast.GraphTypeOuterClass.GraphTypeLikeGraph parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ast.GraphTypeOuterClass.GraphTypeLikeGraph parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ast.GraphTypeOuterClass.GraphTypeLikeGraph parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ast.GraphTypeOuterClass.GraphTypeLikeGraph parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static ast.GraphTypeOuterClass.GraphTypeLikeGraph parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static ast.GraphTypeOuterClass.GraphTypeLikeGraph parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ast.GraphTypeOuterClass.GraphTypeLikeGraph parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ast.GraphTypeOuterClass.GraphTypeLikeGraph parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ast.GraphTypeOuterClass.GraphTypeLikeGraph prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ast.GraphTypeLikeGraph}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ast.GraphTypeLikeGraph)
        ast.GraphTypeOuterClass.GraphTypeLikeGraphOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ast.GraphTypeOuterClass.internal_static_ast_GraphTypeLikeGraph_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ast.GraphTypeOuterClass.internal_static_ast_GraphTypeLikeGraph_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ast.GraphTypeOuterClass.GraphTypeLikeGraph.class, ast.GraphTypeOuterClass.GraphTypeLikeGraph.Builder.class);
      }

      // Construct using ast.GraphTypeOuterClass.GraphTypeLikeGraph.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getGraphExpressionFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        graphExpression_ = null;
        if (graphExpressionBuilder_ != null) {
          graphExpressionBuilder_.dispose();
          graphExpressionBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ast.GraphTypeOuterClass.internal_static_ast_GraphTypeLikeGraph_descriptor;
      }

      @java.lang.Override
      public ast.GraphTypeOuterClass.GraphTypeLikeGraph getDefaultInstanceForType() {
        return ast.GraphTypeOuterClass.GraphTypeLikeGraph.getDefaultInstance();
      }

      @java.lang.Override
      public ast.GraphTypeOuterClass.GraphTypeLikeGraph build() {
        ast.GraphTypeOuterClass.GraphTypeLikeGraph result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public ast.GraphTypeOuterClass.GraphTypeLikeGraph buildPartial() {
        ast.GraphTypeOuterClass.GraphTypeLikeGraph result = new ast.GraphTypeOuterClass.GraphTypeLikeGraph(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(ast.GraphTypeOuterClass.GraphTypeLikeGraph result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.graphExpression_ = graphExpressionBuilder_ == null
              ? graphExpression_
              : graphExpressionBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ast.GraphTypeOuterClass.GraphTypeLikeGraph) {
          return mergeFrom((ast.GraphTypeOuterClass.GraphTypeLikeGraph)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ast.GraphTypeOuterClass.GraphTypeLikeGraph other) {
        if (other == ast.GraphTypeOuterClass.GraphTypeLikeGraph.getDefaultInstance()) return this;
        if (other.hasGraphExpression()) {
          mergeGraphExpression(other.getGraphExpression());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getGraphExpressionFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private ast.GraphExpressionOuterClass.GraphExpression graphExpression_;
      private com.google.protobuf.SingleFieldBuilder<
          ast.GraphExpressionOuterClass.GraphExpression, ast.GraphExpressionOuterClass.GraphExpression.Builder, ast.GraphExpressionOuterClass.GraphExpressionOrBuilder> graphExpressionBuilder_;
      /**
       * <code>.ast.GraphExpression graph_expression = 1;</code>
       * @return Whether the graphExpression field is set.
       */
      public boolean hasGraphExpression() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>.ast.GraphExpression graph_expression = 1;</code>
       * @return The graphExpression.
       */
      public ast.GraphExpressionOuterClass.GraphExpression getGraphExpression() {
        if (graphExpressionBuilder_ == null) {
          return graphExpression_ == null ? ast.GraphExpressionOuterClass.GraphExpression.getDefaultInstance() : graphExpression_;
        } else {
          return graphExpressionBuilder_.getMessage();
        }
      }
      /**
       * <code>.ast.GraphExpression graph_expression = 1;</code>
       */
      public Builder setGraphExpression(ast.GraphExpressionOuterClass.GraphExpression value) {
        if (graphExpressionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          graphExpression_ = value;
        } else {
          graphExpressionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.ast.GraphExpression graph_expression = 1;</code>
       */
      public Builder setGraphExpression(
          ast.GraphExpressionOuterClass.GraphExpression.Builder builderForValue) {
        if (graphExpressionBuilder_ == null) {
          graphExpression_ = builderForValue.build();
        } else {
          graphExpressionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.ast.GraphExpression graph_expression = 1;</code>
       */
      public Builder mergeGraphExpression(ast.GraphExpressionOuterClass.GraphExpression value) {
        if (graphExpressionBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            graphExpression_ != null &&
            graphExpression_ != ast.GraphExpressionOuterClass.GraphExpression.getDefaultInstance()) {
            getGraphExpressionBuilder().mergeFrom(value);
          } else {
            graphExpression_ = value;
          }
        } else {
          graphExpressionBuilder_.mergeFrom(value);
        }
        if (graphExpression_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.ast.GraphExpression graph_expression = 1;</code>
       */
      public Builder clearGraphExpression() {
        bitField0_ = (bitField0_ & ~0x00000001);
        graphExpression_ = null;
        if (graphExpressionBuilder_ != null) {
          graphExpressionBuilder_.dispose();
          graphExpressionBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.ast.GraphExpression graph_expression = 1;</code>
       */
      public ast.GraphExpressionOuterClass.GraphExpression.Builder getGraphExpressionBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getGraphExpressionFieldBuilder().getBuilder();
      }
      /**
       * <code>.ast.GraphExpression graph_expression = 1;</code>
       */
      public ast.GraphExpressionOuterClass.GraphExpressionOrBuilder getGraphExpressionOrBuilder() {
        if (graphExpressionBuilder_ != null) {
          return graphExpressionBuilder_.getMessageOrBuilder();
        } else {
          return graphExpression_ == null ?
              ast.GraphExpressionOuterClass.GraphExpression.getDefaultInstance() : graphExpression_;
        }
      }
      /**
       * <code>.ast.GraphExpression graph_expression = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ast.GraphExpressionOuterClass.GraphExpression, ast.GraphExpressionOuterClass.GraphExpression.Builder, ast.GraphExpressionOuterClass.GraphExpressionOrBuilder> 
          getGraphExpressionFieldBuilder() {
        if (graphExpressionBuilder_ == null) {
          graphExpressionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ast.GraphExpressionOuterClass.GraphExpression, ast.GraphExpressionOuterClass.GraphExpression.Builder, ast.GraphExpressionOuterClass.GraphExpressionOrBuilder>(
                  getGraphExpression(),
                  getParentForChildren(),
                  isClean());
          graphExpression_ = null;
        }
        return graphExpressionBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ast.GraphTypeLikeGraph)
    }

    // @@protoc_insertion_point(class_scope:ast.GraphTypeLikeGraph)
    private static final ast.GraphTypeOuterClass.GraphTypeLikeGraph DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ast.GraphTypeOuterClass.GraphTypeLikeGraph();
    }

    public static ast.GraphTypeOuterClass.GraphTypeLikeGraph getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GraphTypeLikeGraph>
        PARSER = new com.google.protobuf.AbstractParser<GraphTypeLikeGraph>() {
      @java.lang.Override
      public GraphTypeLikeGraph parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<GraphTypeLikeGraph> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GraphTypeLikeGraph> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public ast.GraphTypeOuterClass.GraphTypeLikeGraph getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NestedGraphTypeSpecificationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ast.NestedGraphTypeSpecification)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * Todo
   * </pre>
   *
   * Protobuf type {@code ast.NestedGraphTypeSpecification}
   */
  public static final class NestedGraphTypeSpecification extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ast.NestedGraphTypeSpecification)
      NestedGraphTypeSpecificationOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        NestedGraphTypeSpecification.class.getName());
    }
    // Use NestedGraphTypeSpecification.newBuilder() to construct.
    private NestedGraphTypeSpecification(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private NestedGraphTypeSpecification() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ast.GraphTypeOuterClass.internal_static_ast_NestedGraphTypeSpecification_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ast.GraphTypeOuterClass.internal_static_ast_NestedGraphTypeSpecification_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ast.GraphTypeOuterClass.NestedGraphTypeSpecification.class, ast.GraphTypeOuterClass.NestedGraphTypeSpecification.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ast.GraphTypeOuterClass.NestedGraphTypeSpecification)) {
        return super.equals(obj);
      }
      ast.GraphTypeOuterClass.NestedGraphTypeSpecification other = (ast.GraphTypeOuterClass.NestedGraphTypeSpecification) obj;

      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ast.GraphTypeOuterClass.NestedGraphTypeSpecification parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ast.GraphTypeOuterClass.NestedGraphTypeSpecification parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ast.GraphTypeOuterClass.NestedGraphTypeSpecification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ast.GraphTypeOuterClass.NestedGraphTypeSpecification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ast.GraphTypeOuterClass.NestedGraphTypeSpecification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ast.GraphTypeOuterClass.NestedGraphTypeSpecification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ast.GraphTypeOuterClass.NestedGraphTypeSpecification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ast.GraphTypeOuterClass.NestedGraphTypeSpecification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static ast.GraphTypeOuterClass.NestedGraphTypeSpecification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static ast.GraphTypeOuterClass.NestedGraphTypeSpecification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ast.GraphTypeOuterClass.NestedGraphTypeSpecification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ast.GraphTypeOuterClass.NestedGraphTypeSpecification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ast.GraphTypeOuterClass.NestedGraphTypeSpecification prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Todo
     * </pre>
     *
     * Protobuf type {@code ast.NestedGraphTypeSpecification}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ast.NestedGraphTypeSpecification)
        ast.GraphTypeOuterClass.NestedGraphTypeSpecificationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ast.GraphTypeOuterClass.internal_static_ast_NestedGraphTypeSpecification_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ast.GraphTypeOuterClass.internal_static_ast_NestedGraphTypeSpecification_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ast.GraphTypeOuterClass.NestedGraphTypeSpecification.class, ast.GraphTypeOuterClass.NestedGraphTypeSpecification.Builder.class);
      }

      // Construct using ast.GraphTypeOuterClass.NestedGraphTypeSpecification.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ast.GraphTypeOuterClass.internal_static_ast_NestedGraphTypeSpecification_descriptor;
      }

      @java.lang.Override
      public ast.GraphTypeOuterClass.NestedGraphTypeSpecification getDefaultInstanceForType() {
        return ast.GraphTypeOuterClass.NestedGraphTypeSpecification.getDefaultInstance();
      }

      @java.lang.Override
      public ast.GraphTypeOuterClass.NestedGraphTypeSpecification build() {
        ast.GraphTypeOuterClass.NestedGraphTypeSpecification result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public ast.GraphTypeOuterClass.NestedGraphTypeSpecification buildPartial() {
        ast.GraphTypeOuterClass.NestedGraphTypeSpecification result = new ast.GraphTypeOuterClass.NestedGraphTypeSpecification(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ast.GraphTypeOuterClass.NestedGraphTypeSpecification) {
          return mergeFrom((ast.GraphTypeOuterClass.NestedGraphTypeSpecification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ast.GraphTypeOuterClass.NestedGraphTypeSpecification other) {
        if (other == ast.GraphTypeOuterClass.NestedGraphTypeSpecification.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ast.NestedGraphTypeSpecification)
    }

    // @@protoc_insertion_point(class_scope:ast.NestedGraphTypeSpecification)
    private static final ast.GraphTypeOuterClass.NestedGraphTypeSpecification DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ast.GraphTypeOuterClass.NestedGraphTypeSpecification();
    }

    public static ast.GraphTypeOuterClass.NestedGraphTypeSpecification getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NestedGraphTypeSpecification>
        PARSER = new com.google.protobuf.AbstractParser<NestedGraphTypeSpecification>() {
      @java.lang.Override
      public NestedGraphTypeSpecification parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<NestedGraphTypeSpecification> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NestedGraphTypeSpecification> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public ast.GraphTypeOuterClass.NestedGraphTypeSpecification getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GraphTypeReferenceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ast.GraphTypeReference)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.ast.CatalogParentAndName parent_and_name = 1;</code>
     * @return Whether the parentAndName field is set.
     */
    boolean hasParentAndName();
    /**
     * <code>.ast.CatalogParentAndName parent_and_name = 1;</code>
     * @return The parentAndName.
     */
    ast.Catalog.CatalogParentAndName getParentAndName();
    /**
     * <code>.ast.CatalogParentAndName parent_and_name = 1;</code>
     */
    ast.Catalog.CatalogParentAndNameOrBuilder getParentAndNameOrBuilder();

    /**
     * <code>.ast.ReferenceParameterSpecification reference_parameter_specification = 2;</code>
     * @return Whether the referenceParameterSpecification field is set.
     */
    boolean hasReferenceParameterSpecification();
    /**
     * <code>.ast.ReferenceParameterSpecification reference_parameter_specification = 2;</code>
     * @return The referenceParameterSpecification.
     */
    ast.Literals.ReferenceParameterSpecification getReferenceParameterSpecification();
    /**
     * <code>.ast.ReferenceParameterSpecification reference_parameter_specification = 2;</code>
     */
    ast.Literals.ReferenceParameterSpecificationOrBuilder getReferenceParameterSpecificationOrBuilder();

    ast.GraphTypeOuterClass.GraphTypeReference.TypeCase getTypeCase();
  }
  /**
   * Protobuf type {@code ast.GraphTypeReference}
   */
  public static final class GraphTypeReference extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ast.GraphTypeReference)
      GraphTypeReferenceOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        GraphTypeReference.class.getName());
    }
    // Use GraphTypeReference.newBuilder() to construct.
    private GraphTypeReference(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private GraphTypeReference() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ast.GraphTypeOuterClass.internal_static_ast_GraphTypeReference_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ast.GraphTypeOuterClass.internal_static_ast_GraphTypeReference_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ast.GraphTypeOuterClass.GraphTypeReference.class, ast.GraphTypeOuterClass.GraphTypeReference.Builder.class);
    }

    private int typeCase_ = 0;
    @SuppressWarnings("serial")
    private java.lang.Object type_;
    public enum TypeCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      PARENT_AND_NAME(1),
      REFERENCE_PARAMETER_SPECIFICATION(2),
      TYPE_NOT_SET(0);
      private final int value;
      private TypeCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static TypeCase forNumber(int value) {
        switch (value) {
          case 1: return PARENT_AND_NAME;
          case 2: return REFERENCE_PARAMETER_SPECIFICATION;
          case 0: return TYPE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public TypeCase
    getTypeCase() {
      return TypeCase.forNumber(
          typeCase_);
    }

    public static final int PARENT_AND_NAME_FIELD_NUMBER = 1;
    /**
     * <code>.ast.CatalogParentAndName parent_and_name = 1;</code>
     * @return Whether the parentAndName field is set.
     */
    @java.lang.Override
    public boolean hasParentAndName() {
      return typeCase_ == 1;
    }
    /**
     * <code>.ast.CatalogParentAndName parent_and_name = 1;</code>
     * @return The parentAndName.
     */
    @java.lang.Override
    public ast.Catalog.CatalogParentAndName getParentAndName() {
      if (typeCase_ == 1) {
         return (ast.Catalog.CatalogParentAndName) type_;
      }
      return ast.Catalog.CatalogParentAndName.getDefaultInstance();
    }
    /**
     * <code>.ast.CatalogParentAndName parent_and_name = 1;</code>
     */
    @java.lang.Override
    public ast.Catalog.CatalogParentAndNameOrBuilder getParentAndNameOrBuilder() {
      if (typeCase_ == 1) {
         return (ast.Catalog.CatalogParentAndName) type_;
      }
      return ast.Catalog.CatalogParentAndName.getDefaultInstance();
    }

    public static final int REFERENCE_PARAMETER_SPECIFICATION_FIELD_NUMBER = 2;
    /**
     * <code>.ast.ReferenceParameterSpecification reference_parameter_specification = 2;</code>
     * @return Whether the referenceParameterSpecification field is set.
     */
    @java.lang.Override
    public boolean hasReferenceParameterSpecification() {
      return typeCase_ == 2;
    }
    /**
     * <code>.ast.ReferenceParameterSpecification reference_parameter_specification = 2;</code>
     * @return The referenceParameterSpecification.
     */
    @java.lang.Override
    public ast.Literals.ReferenceParameterSpecification getReferenceParameterSpecification() {
      if (typeCase_ == 2) {
         return (ast.Literals.ReferenceParameterSpecification) type_;
      }
      return ast.Literals.ReferenceParameterSpecification.getDefaultInstance();
    }
    /**
     * <code>.ast.ReferenceParameterSpecification reference_parameter_specification = 2;</code>
     */
    @java.lang.Override
    public ast.Literals.ReferenceParameterSpecificationOrBuilder getReferenceParameterSpecificationOrBuilder() {
      if (typeCase_ == 2) {
         return (ast.Literals.ReferenceParameterSpecification) type_;
      }
      return ast.Literals.ReferenceParameterSpecification.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (typeCase_ == 1) {
        output.writeMessage(1, (ast.Catalog.CatalogParentAndName) type_);
      }
      if (typeCase_ == 2) {
        output.writeMessage(2, (ast.Literals.ReferenceParameterSpecification) type_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (typeCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (ast.Catalog.CatalogParentAndName) type_);
      }
      if (typeCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (ast.Literals.ReferenceParameterSpecification) type_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ast.GraphTypeOuterClass.GraphTypeReference)) {
        return super.equals(obj);
      }
      ast.GraphTypeOuterClass.GraphTypeReference other = (ast.GraphTypeOuterClass.GraphTypeReference) obj;

      if (!getTypeCase().equals(other.getTypeCase())) return false;
      switch (typeCase_) {
        case 1:
          if (!getParentAndName()
              .equals(other.getParentAndName())) return false;
          break;
        case 2:
          if (!getReferenceParameterSpecification()
              .equals(other.getReferenceParameterSpecification())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (typeCase_) {
        case 1:
          hash = (37 * hash) + PARENT_AND_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getParentAndName().hashCode();
          break;
        case 2:
          hash = (37 * hash) + REFERENCE_PARAMETER_SPECIFICATION_FIELD_NUMBER;
          hash = (53 * hash) + getReferenceParameterSpecification().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ast.GraphTypeOuterClass.GraphTypeReference parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ast.GraphTypeOuterClass.GraphTypeReference parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ast.GraphTypeOuterClass.GraphTypeReference parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ast.GraphTypeOuterClass.GraphTypeReference parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ast.GraphTypeOuterClass.GraphTypeReference parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ast.GraphTypeOuterClass.GraphTypeReference parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ast.GraphTypeOuterClass.GraphTypeReference parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ast.GraphTypeOuterClass.GraphTypeReference parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static ast.GraphTypeOuterClass.GraphTypeReference parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static ast.GraphTypeOuterClass.GraphTypeReference parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ast.GraphTypeOuterClass.GraphTypeReference parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static ast.GraphTypeOuterClass.GraphTypeReference parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ast.GraphTypeOuterClass.GraphTypeReference prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ast.GraphTypeReference}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ast.GraphTypeReference)
        ast.GraphTypeOuterClass.GraphTypeReferenceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ast.GraphTypeOuterClass.internal_static_ast_GraphTypeReference_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ast.GraphTypeOuterClass.internal_static_ast_GraphTypeReference_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ast.GraphTypeOuterClass.GraphTypeReference.class, ast.GraphTypeOuterClass.GraphTypeReference.Builder.class);
      }

      // Construct using ast.GraphTypeOuterClass.GraphTypeReference.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (parentAndNameBuilder_ != null) {
          parentAndNameBuilder_.clear();
        }
        if (referenceParameterSpecificationBuilder_ != null) {
          referenceParameterSpecificationBuilder_.clear();
        }
        typeCase_ = 0;
        type_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ast.GraphTypeOuterClass.internal_static_ast_GraphTypeReference_descriptor;
      }

      @java.lang.Override
      public ast.GraphTypeOuterClass.GraphTypeReference getDefaultInstanceForType() {
        return ast.GraphTypeOuterClass.GraphTypeReference.getDefaultInstance();
      }

      @java.lang.Override
      public ast.GraphTypeOuterClass.GraphTypeReference build() {
        ast.GraphTypeOuterClass.GraphTypeReference result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public ast.GraphTypeOuterClass.GraphTypeReference buildPartial() {
        ast.GraphTypeOuterClass.GraphTypeReference result = new ast.GraphTypeOuterClass.GraphTypeReference(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(ast.GraphTypeOuterClass.GraphTypeReference result) {
        int from_bitField0_ = bitField0_;
      }

      private void buildPartialOneofs(ast.GraphTypeOuterClass.GraphTypeReference result) {
        result.typeCase_ = typeCase_;
        result.type_ = this.type_;
        if (typeCase_ == 1 &&
            parentAndNameBuilder_ != null) {
          result.type_ = parentAndNameBuilder_.build();
        }
        if (typeCase_ == 2 &&
            referenceParameterSpecificationBuilder_ != null) {
          result.type_ = referenceParameterSpecificationBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ast.GraphTypeOuterClass.GraphTypeReference) {
          return mergeFrom((ast.GraphTypeOuterClass.GraphTypeReference)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ast.GraphTypeOuterClass.GraphTypeReference other) {
        if (other == ast.GraphTypeOuterClass.GraphTypeReference.getDefaultInstance()) return this;
        switch (other.getTypeCase()) {
          case PARENT_AND_NAME: {
            mergeParentAndName(other.getParentAndName());
            break;
          }
          case REFERENCE_PARAMETER_SPECIFICATION: {
            mergeReferenceParameterSpecification(other.getReferenceParameterSpecification());
            break;
          }
          case TYPE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getParentAndNameFieldBuilder().getBuilder(),
                    extensionRegistry);
                typeCase_ = 1;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getReferenceParameterSpecificationFieldBuilder().getBuilder(),
                    extensionRegistry);
                typeCase_ = 2;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int typeCase_ = 0;
      private java.lang.Object type_;
      public TypeCase
          getTypeCase() {
        return TypeCase.forNumber(
            typeCase_);
      }

      public Builder clearType() {
        typeCase_ = 0;
        type_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.SingleFieldBuilder<
          ast.Catalog.CatalogParentAndName, ast.Catalog.CatalogParentAndName.Builder, ast.Catalog.CatalogParentAndNameOrBuilder> parentAndNameBuilder_;
      /**
       * <code>.ast.CatalogParentAndName parent_and_name = 1;</code>
       * @return Whether the parentAndName field is set.
       */
      @java.lang.Override
      public boolean hasParentAndName() {
        return typeCase_ == 1;
      }
      /**
       * <code>.ast.CatalogParentAndName parent_and_name = 1;</code>
       * @return The parentAndName.
       */
      @java.lang.Override
      public ast.Catalog.CatalogParentAndName getParentAndName() {
        if (parentAndNameBuilder_ == null) {
          if (typeCase_ == 1) {
            return (ast.Catalog.CatalogParentAndName) type_;
          }
          return ast.Catalog.CatalogParentAndName.getDefaultInstance();
        } else {
          if (typeCase_ == 1) {
            return parentAndNameBuilder_.getMessage();
          }
          return ast.Catalog.CatalogParentAndName.getDefaultInstance();
        }
      }
      /**
       * <code>.ast.CatalogParentAndName parent_and_name = 1;</code>
       */
      public Builder setParentAndName(ast.Catalog.CatalogParentAndName value) {
        if (parentAndNameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          parentAndNameBuilder_.setMessage(value);
        }
        typeCase_ = 1;
        return this;
      }
      /**
       * <code>.ast.CatalogParentAndName parent_and_name = 1;</code>
       */
      public Builder setParentAndName(
          ast.Catalog.CatalogParentAndName.Builder builderForValue) {
        if (parentAndNameBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          parentAndNameBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 1;
        return this;
      }
      /**
       * <code>.ast.CatalogParentAndName parent_and_name = 1;</code>
       */
      public Builder mergeParentAndName(ast.Catalog.CatalogParentAndName value) {
        if (parentAndNameBuilder_ == null) {
          if (typeCase_ == 1 &&
              type_ != ast.Catalog.CatalogParentAndName.getDefaultInstance()) {
            type_ = ast.Catalog.CatalogParentAndName.newBuilder((ast.Catalog.CatalogParentAndName) type_)
                .mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 1) {
            parentAndNameBuilder_.mergeFrom(value);
          } else {
            parentAndNameBuilder_.setMessage(value);
          }
        }
        typeCase_ = 1;
        return this;
      }
      /**
       * <code>.ast.CatalogParentAndName parent_and_name = 1;</code>
       */
      public Builder clearParentAndName() {
        if (parentAndNameBuilder_ == null) {
          if (typeCase_ == 1) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 1) {
            typeCase_ = 0;
            type_ = null;
          }
          parentAndNameBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.ast.CatalogParentAndName parent_and_name = 1;</code>
       */
      public ast.Catalog.CatalogParentAndName.Builder getParentAndNameBuilder() {
        return getParentAndNameFieldBuilder().getBuilder();
      }
      /**
       * <code>.ast.CatalogParentAndName parent_and_name = 1;</code>
       */
      @java.lang.Override
      public ast.Catalog.CatalogParentAndNameOrBuilder getParentAndNameOrBuilder() {
        if ((typeCase_ == 1) && (parentAndNameBuilder_ != null)) {
          return parentAndNameBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 1) {
            return (ast.Catalog.CatalogParentAndName) type_;
          }
          return ast.Catalog.CatalogParentAndName.getDefaultInstance();
        }
      }
      /**
       * <code>.ast.CatalogParentAndName parent_and_name = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ast.Catalog.CatalogParentAndName, ast.Catalog.CatalogParentAndName.Builder, ast.Catalog.CatalogParentAndNameOrBuilder> 
          getParentAndNameFieldBuilder() {
        if (parentAndNameBuilder_ == null) {
          if (!(typeCase_ == 1)) {
            type_ = ast.Catalog.CatalogParentAndName.getDefaultInstance();
          }
          parentAndNameBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ast.Catalog.CatalogParentAndName, ast.Catalog.CatalogParentAndName.Builder, ast.Catalog.CatalogParentAndNameOrBuilder>(
                  (ast.Catalog.CatalogParentAndName) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 1;
        onChanged();
        return parentAndNameBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          ast.Literals.ReferenceParameterSpecification, ast.Literals.ReferenceParameterSpecification.Builder, ast.Literals.ReferenceParameterSpecificationOrBuilder> referenceParameterSpecificationBuilder_;
      /**
       * <code>.ast.ReferenceParameterSpecification reference_parameter_specification = 2;</code>
       * @return Whether the referenceParameterSpecification field is set.
       */
      @java.lang.Override
      public boolean hasReferenceParameterSpecification() {
        return typeCase_ == 2;
      }
      /**
       * <code>.ast.ReferenceParameterSpecification reference_parameter_specification = 2;</code>
       * @return The referenceParameterSpecification.
       */
      @java.lang.Override
      public ast.Literals.ReferenceParameterSpecification getReferenceParameterSpecification() {
        if (referenceParameterSpecificationBuilder_ == null) {
          if (typeCase_ == 2) {
            return (ast.Literals.ReferenceParameterSpecification) type_;
          }
          return ast.Literals.ReferenceParameterSpecification.getDefaultInstance();
        } else {
          if (typeCase_ == 2) {
            return referenceParameterSpecificationBuilder_.getMessage();
          }
          return ast.Literals.ReferenceParameterSpecification.getDefaultInstance();
        }
      }
      /**
       * <code>.ast.ReferenceParameterSpecification reference_parameter_specification = 2;</code>
       */
      public Builder setReferenceParameterSpecification(ast.Literals.ReferenceParameterSpecification value) {
        if (referenceParameterSpecificationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          referenceParameterSpecificationBuilder_.setMessage(value);
        }
        typeCase_ = 2;
        return this;
      }
      /**
       * <code>.ast.ReferenceParameterSpecification reference_parameter_specification = 2;</code>
       */
      public Builder setReferenceParameterSpecification(
          ast.Literals.ReferenceParameterSpecification.Builder builderForValue) {
        if (referenceParameterSpecificationBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          referenceParameterSpecificationBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 2;
        return this;
      }
      /**
       * <code>.ast.ReferenceParameterSpecification reference_parameter_specification = 2;</code>
       */
      public Builder mergeReferenceParameterSpecification(ast.Literals.ReferenceParameterSpecification value) {
        if (referenceParameterSpecificationBuilder_ == null) {
          if (typeCase_ == 2 &&
              type_ != ast.Literals.ReferenceParameterSpecification.getDefaultInstance()) {
            type_ = ast.Literals.ReferenceParameterSpecification.newBuilder((ast.Literals.ReferenceParameterSpecification) type_)
                .mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 2) {
            referenceParameterSpecificationBuilder_.mergeFrom(value);
          } else {
            referenceParameterSpecificationBuilder_.setMessage(value);
          }
        }
        typeCase_ = 2;
        return this;
      }
      /**
       * <code>.ast.ReferenceParameterSpecification reference_parameter_specification = 2;</code>
       */
      public Builder clearReferenceParameterSpecification() {
        if (referenceParameterSpecificationBuilder_ == null) {
          if (typeCase_ == 2) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 2) {
            typeCase_ = 0;
            type_ = null;
          }
          referenceParameterSpecificationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.ast.ReferenceParameterSpecification reference_parameter_specification = 2;</code>
       */
      public ast.Literals.ReferenceParameterSpecification.Builder getReferenceParameterSpecificationBuilder() {
        return getReferenceParameterSpecificationFieldBuilder().getBuilder();
      }
      /**
       * <code>.ast.ReferenceParameterSpecification reference_parameter_specification = 2;</code>
       */
      @java.lang.Override
      public ast.Literals.ReferenceParameterSpecificationOrBuilder getReferenceParameterSpecificationOrBuilder() {
        if ((typeCase_ == 2) && (referenceParameterSpecificationBuilder_ != null)) {
          return referenceParameterSpecificationBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 2) {
            return (ast.Literals.ReferenceParameterSpecification) type_;
          }
          return ast.Literals.ReferenceParameterSpecification.getDefaultInstance();
        }
      }
      /**
       * <code>.ast.ReferenceParameterSpecification reference_parameter_specification = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ast.Literals.ReferenceParameterSpecification, ast.Literals.ReferenceParameterSpecification.Builder, ast.Literals.ReferenceParameterSpecificationOrBuilder> 
          getReferenceParameterSpecificationFieldBuilder() {
        if (referenceParameterSpecificationBuilder_ == null) {
          if (!(typeCase_ == 2)) {
            type_ = ast.Literals.ReferenceParameterSpecification.getDefaultInstance();
          }
          referenceParameterSpecificationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ast.Literals.ReferenceParameterSpecification, ast.Literals.ReferenceParameterSpecification.Builder, ast.Literals.ReferenceParameterSpecificationOrBuilder>(
                  (ast.Literals.ReferenceParameterSpecification) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 2;
        onChanged();
        return referenceParameterSpecificationBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ast.GraphTypeReference)
    }

    // @@protoc_insertion_point(class_scope:ast.GraphTypeReference)
    private static final ast.GraphTypeOuterClass.GraphTypeReference DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ast.GraphTypeOuterClass.GraphTypeReference();
    }

    public static ast.GraphTypeOuterClass.GraphTypeReference getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GraphTypeReference>
        PARSER = new com.google.protobuf.AbstractParser<GraphTypeReference>() {
      @java.lang.Override
      public GraphTypeReference parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<GraphTypeReference> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GraphTypeReference> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public ast.GraphTypeOuterClass.GraphTypeReference getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ast_GraphType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ast_GraphType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ast_GraphTypeLikeGraph_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ast_GraphTypeLikeGraph_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ast_NestedGraphTypeSpecification_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ast_NestedGraphTypeSpecification_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ast_GraphTypeReference_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ast_GraphTypeReference_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020graph_type.proto\022\003ast\032!google/protobuf" +
      "/go_features.proto\032\rcatalog.proto\032\016liter" +
      "als.proto\032\026graph_expression.proto\"\324\001\n\tGr" +
      "aphType\0228\n\025graph_type_like_graph\030\001 \001(\0132\027" +
      ".ast.GraphTypeLikeGraphH\000\0227\n\024graph_type_" +
      "reference\030\002 \001(\0132\027.ast.GraphTypeReference" +
      "H\000\022L\n\037nested_graph_type_specification\030\003 " +
      "\001(\0132!.ast.NestedGraphTypeSpecificationH\000" +
      "B\006\n\004type\"D\n\022GraphTypeLikeGraph\022.\n\020graph_" +
      "expression\030\001 \001(\0132\024.ast.GraphExpression\"\036" +
      "\n\034NestedGraphTypeSpecification\"\245\001\n\022Graph" +
      "TypeReference\0224\n\017parent_and_name\030\001 \001(\0132\031" +
      ".ast.CatalogParentAndNameH\000\022Q\n!reference" +
      "_parameter_specification\030\002 \001(\0132$.ast.Ref" +
      "erenceParameterSpecificationH\000B\006\n\004typeB\020" +
      "Z\004/ast\222\003\007\010\002\322>\002\020\003b\010editionsp\350\007"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          pb.GoFeaturesOuterClass.getDescriptor(),
          ast.Catalog.getDescriptor(),
          ast.Literals.getDescriptor(),
          ast.GraphExpressionOuterClass.getDescriptor(),
        });
    internal_static_ast_GraphType_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ast_GraphType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ast_GraphType_descriptor,
        new java.lang.String[] { "GraphTypeLikeGraph", "GraphTypeReference", "NestedGraphTypeSpecification", "Type", });
    internal_static_ast_GraphTypeLikeGraph_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_ast_GraphTypeLikeGraph_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ast_GraphTypeLikeGraph_descriptor,
        new java.lang.String[] { "GraphExpression", });
    internal_static_ast_NestedGraphTypeSpecification_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_ast_NestedGraphTypeSpecification_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ast_NestedGraphTypeSpecification_descriptor,
        new java.lang.String[] { });
    internal_static_ast_GraphTypeReference_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_ast_GraphTypeReference_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ast_GraphTypeReference_descriptor,
        new java.lang.String[] { "ParentAndName", "ReferenceParameterSpecification", "Type", });
    descriptor.resolveAllFeaturesImmutable();
    pb.GoFeaturesOuterClass.getDescriptor();
    ast.Catalog.getDescriptor();
    ast.Literals.getDescriptor();
    ast.GraphExpressionOuterClass.getDescriptor();
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(pb.GoFeaturesOuterClass.go);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
